var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.231,1,2.354]],["body/controllers/AppController.html",[0,2.022,1,3.866,2,2.112,3,0.284,4,0.248,5,0.248,6,3.924,7,0.573,8,2.022,9,5.505,10,1.135,11,0.023,12,0.62,13,4.618,14,1.635,15,0.954,16,0.352,17,0.825,18,3.527,19,3.924,20,0.284,21,0.161,22,3.924,23,1.852,24,1.635,25,4.618,26,0.019,27,0.019]],["title/modules/AppModule.html",[28,0.966,29,2.354]],["body/modules/AppModule.html",[1,2.92,2,1.628,3,0.144,4,0.125,5,0.125,11,0.024,16,0.422,17,0.417,18,3.113,19,1.985,20,0.144,21,0.082,26,0.012,27,0.012,28,1.198,29,4.739,30,0.937,31,1.068,32,1.23,33,1.23,34,1.068,35,2.272,36,1.23,37,1.985,38,1.985,39,1.985,40,3.382,41,3.382,42,3.382,43,3.382,44,3.382,45,3.382,46,3.382,47,3.113,48,2.502,49,2.061,50,2.883,51,2.883,52,2.681,53,1.875,54,1.23,55,1.23,56,2.335,57,2.92,58,2.92,59,2.92,60,2.92,61,2.673,62,2.335,63,2.335,64,2.335,65,2.335,66,2.335,67,2.335,68,1.754,69,1.328,70,3.239,71,2.666,72,2.335,73,2.335,74,1.754,75,2.335,76,2.335,77,2.335,78,2.335,79,2.335,80,2.335,81,2.335,82,3.025,83,2.335,84,3.56,85,1.985,86,2.2,87,2.335,88,2.335,89,1.985,90,2.335,91,2.335,92,2.335,93,2.335,94,2.335]],["title/injectables/AppService.html",[18,1.978,95,0.909]],["body/injectables/AppService.html",[3,0.297,4,0.258,5,0.258,7,0.598,8,2.075,9,5.587,11,0.023,12,0.647,14,1.706,15,0.979,16,0.297,17,0.861,18,3.335,20,0.297,21,0.168,24,1.706,26,0.019,27,0.019,95,1.532,96,2.204,97,4.095,98,4.819,99,4.819,100,4.819]],["title/guards/AuthGuard.html",[86,2.149,101,2.611]],["body/guards/AuthGuard.html",[3,0.196,4,0.17,5,0.17,7,0.395,8,1.58,11,0.024,12,0.692,14,1.58,16,0.344,17,0.568,20,0.196,21,0.111,22,2.702,24,1.58,26,0.015,27,0.015,52,2.992,86,2.758,95,1.166,102,3.179,103,2.702,104,5.888,105,2.933,106,4.382,107,1.125,108,3.179,109,3.179,110,1.825,111,1.12,112,0.747,113,1.825,114,3.179,115,5.591,116,3.179,117,5.156,118,4.462,119,4.751,120,5.156,121,2.702,122,4.421,123,3.179,124,3.351,125,4.751,126,2.702,127,2.152,128,3.179,129,3.179,130,2.933,131,3.179,132,3.179,133,3.179,134,1.808,135,4.751,136,2.702,137,3.186,138,2.526,139,2.702,140,3.792,141,1.808,142,3.179,143,2.702,144,2.702,145,1.808,146,1.965,147,1.808,148,3.179]],["title/classes/CreateCustomerDto.html",[21,0.122,149,1.978]],["body/classes/CreateCustomerDto.html",[3,0.197,4,0.171,5,0.171,7,0.397,10,1.544,11,0.023,12,0.843,15,1.153,16,0.197,20,0.318,21,0.196,26,0.015,27,0.015,111,1.217,112,0.909,149,2.548,150,1.064,151,2.163,152,1.321,153,3.793,154,2.562,155,2.952,156,2.952,157,2.562,158,3.463,159,2.335,160,3.196,161,2.952,162,3.196,163,2.997,164,2.746,165,3.196,166,2.746,167,3.196,168,2.716,169,3.196,170,3.196,171,3.793,172,3.196,173,3.363,174,2.4,175,3.705,176,1.064,177,1.684,178,1.684,179,2.163,180,2.163,181,2.4]],["title/controllers/CustomerController.html",[0,1.231,59,2.354]],["body/controllers/CustomerController.html",[0,1.048,2,1.354,3,0.182,4,0.159,5,0.159,7,0.368,8,1.502,10,1.409,11,0.024,12,0.77,14,2.029,15,1.109,16,0.305,17,0.529,20,0.182,21,0.104,23,1.188,24,2.029,26,0.014,27,0.014,47,2.821,59,2.873,107,1.048,110,1.917,111,1.176,112,0.784,113,1.917,177,2.853,178,2.853,182,2.517,183,1.83,184,1.83,185,3.606,186,4.603,187,3.606,188,4.215,189,4.215,190,2.517,191,4.244,192,2.962,193,2.737,194,2.962,195,2.517,196,2.873,197,2.962,198,2.517,199,2.689,200,3.187,201,2.962,202,2.517,203,4.244,204,4.244,205,2.962,206,3.065,207,3.065,208,2.224,209,1.685,210,2.224,211,1.83,212,2.962,213,2.517,214,2.962,215,1.267,216,2.962,217,2.962,218,2.962,219,2.873,220,2.962,221,2.962,222,2.962,223,2.962]],["title/modules/CustomerModule.html",[28,0.966,40,2.149]],["body/modules/CustomerModule.html",[3,0.321,4,0.279,5,0.279,11,0.023,16,0.321,17,0.932,20,0.321,21,0.182,26,0.02,27,0.02,28,1.706,30,2.091,40,3.797,224,5.212]],["title/injectables/CustomerService.html",[47,1.978,95,0.909]],["body/injectables/CustomerService.html",[3,0.125,4,0.109,5,0.109,7,0.253,8,1.132,11,0.024,12,0.753,14,1.916,15,1.049,16,0.276,17,0.364,20,0.125,21,0.071,23,0.816,24,1.586,26,0.011,27,0.011,47,1.82,49,1.688,95,0.836,96,0.93,105,3.754,107,1.132,110,1.916,111,1.252,112,0.784,113,1.916,130,2.249,134,2.943,138,0.997,141,2.943,145,2.943,146,3.011,147,2.772,149,2.549,153,2.165,154,1.463,155,1.685,156,1.685,157,1.463,158,1.977,177,2.361,178,2.361,179,1.377,180,1.377,184,1.257,185,2.718,186,3.808,187,2.718,188,3.359,189,3.359,190,2.718,193,2.467,195,2.718,198,1.729,199,2.467,202,1.729,206,2.443,213,1.729,215,0.87,225,1.729,226,3.199,227,3.199,228,1.257,229,2.034,230,1.977,231,3.199,232,2.034,233,2.034,234,3.197,235,2.034,236,2.034,237,2.034,238,2.034,239,2.034,240,2.034,241,1.377,242,1.157,243,1.072,244,1.072,245,1.257,246,2.034,247,1.377,248,1.377,249,1.377,250,3.034,251,2.402,252,3.034,253,3.299,254,1.729,255,1.157,256,1.527,257,2.034,258,1.977,259,1.527,260,1.257,261,1.257,262,2.034,263,2.034,264,2.034,265,1.527,266,1.729,267,2.034,268,1.729]],["title/classes/DeliveryPreferenceDto.html",[21,0.122,178,1.832]],["body/classes/DeliveryPreferenceDto.html",[3,0.227,4,0.197,5,0.197,7,0.457,10,1.213,11,0.023,12,0.663,15,1.15,16,0.227,20,0.343,21,0.208,26,0.016,27,0.016,111,1.071,112,0.714,149,2.093,150,1.225,151,2.491,152,1.455,153,3.34,154,2.256,155,2.599,156,2.599,157,2.256,158,3.049,159,2.376,161,2.932,163,2.914,164,2.727,166,2.727,171,3.768,173,4.179,174,2.763,175,3.818,176,1.225,177,1.939,178,2.599,179,3.768,180,3.34,181,4.179,269,3.68,270,3.68]],["title/classes/GeoFencingDto.html",[21,0.122,271,1.978]],["body/classes/GeoFencingDto.html",[3,0.247,4,0.215,5,0.215,7,0.498,10,1.512,11,0.023,12,0.826,15,1.15,16,0.247,20,0.321,21,0.203,26,0.017,27,0.017,112,0.89,150,1.335,152,1.54,155,3.058,156,3.058,159,2.314,164,2.845,166,2.845,176,1.335,206,3.587,271,2.969,272,3.01,273,3.93,274,4.008,275,4.008,276,4.008,277,4.008,278,4.436,279,2.28,280,3.01,281,3.01]],["title/controllers/GeofencingController.html",[0,1.231,282,2.354]],["body/controllers/GeofencingController.html",[0,1.319,2,1.704,3,0.229,4,0.2,5,0.2,7,0.462,8,1.761,10,1.223,11,0.024,12,0.668,14,1.761,15,0.935,16,0.345,17,0.666,20,0.229,21,0.13,23,1.494,24,1.761,26,0.016,27,0.016,48,2.275,107,1.319,110,1.761,111,1.08,112,0.72,113,1.761,183,2.302,193,2.396,199,2.798,207,3.074,209,2.119,211,2.302,215,1.594,219,2.522,271,3.399,279,3.399,282,3.367,283,3.166,284,3.725,285,4.759,286,4.227,287,3.166,288,4.974,289,3.725,290,3.166,291,4.974,292,3.725,293,3.166,294,3.166,295,3.725,296,3.725,297,3.725,298,3.725,299,3.725]],["title/modules/GeofencingModule.html",[28,0.966,41,2.149]],["body/modules/GeofencingModule.html",[2,2.552,3,0.274,4,0.238,5,0.238,11,0.023,16,0.375,17,0.795,20,0.274,21,0.155,26,0.018,27,0.018,28,1.693,30,1.784,31,2.034,32,2.343,33,2.343,34,2.034,35,3.212,36,2.343,41,4.152,48,3.073,53,2.939,54,2.343,55,2.343,282,4.127,293,3.78,300,4.448,301,4.448,302,4.448,303,4.448]],["title/injectables/GeofencingService.html",[48,1.59,95,0.909]],["body/injectables/GeofencingService.html",[3,0.169,4,0.148,5,0.148,7,0.342,8,1.425,11,0.024,12,0.703,14,1.425,15,0.795,16,0.358,17,0.492,20,0.169,21,0.096,23,1.105,26,0.013,27,0.013,48,1.841,49,1.972,95,1.052,96,1.259,105,3.168,107,1.425,110,1.684,111,1.033,112,0.758,113,1.684,130,2.978,134,1.566,137,1.702,138,1.973,141,2.29,145,1.566,152,1.188,155,3.065,156,3.065,158,1.702,184,2.488,193,2.036,199,2.383,206,2.488,215,2.24,228,1.702,230,2.488,234,2.488,242,1.566,243,1.451,244,1.451,245,1.702,250,1.864,252,1.864,254,2.34,258,1.702,271,2.978,273,2.725,279,2.707,285,4.044,286,3.421,287,2.34,290,2.34,294,2.34,304,2.34,305,4.759,306,4.026,307,2.754,308,2.754,309,4.733,310,4.026,311,3.421,312,2.754,313,2.754,314,2.754,315,2.754,316,2.754,317,2.754,318,2.754,319,2.754,320,2.754,321,2.754,322,2.754,323,2.754,324,2.754,325,4.026,326,2.754,327,4.026,328,4.026,329,2.754,330,4.026,331,2.754,332,2.754,333,2.754]],["title/injectables/JwtStrategy.html",[95,0.909,334,2.354]],["body/injectables/JwtStrategy.html",[3,0.264,4,0.23,5,0.23,11,0.024,12,0.576,16,0.388,17,0.767,20,0.264,21,0.15,26,0.018,27,0.018,69,2.441,95,1.425,96,1.962,107,1.519,110,1.519,111,0.932,112,0.621,113,1.519,334,3.693,335,3.647,336,4.635,337,5.996,338,5.996,339,5.096,340,5.454,341,4.025,342,4.291,343,3.222,344,4.291,345,3.647,346,3.647,347,4.291,348,4.291,349,4.291,350,4.291]],["title/modules/LockerModule.html",[28,0.966,42,2.149]],["body/modules/LockerModule.html",[3,0.321,4,0.279,5,0.279,11,0.023,16,0.321,17,0.932,20,0.321,21,0.182,26,0.02,27,0.02,28,1.706,30,2.091,42,3.797,351,5.212]],["title/classes/OrderEntriesDto.html",[21,0.122,352,2.149]],["body/classes/OrderEntriesDto.html",[3,0.231,4,0.201,5,0.201,7,0.465,10,1.228,11,0.023,12,0.671,15,1.072,16,0.307,20,0.346,21,0.209,26,0.016,27,0.016,112,0.723,150,1.248,152,1.473,159,2.319,163,3.144,164,2.752,166,2.752,175,3.549,176,1.248,255,2.132,260,3.087,261,3.087,352,3.087,353,2.959,354,2.537,355,3.803,356,3.803,357,3.748,358,3.803,359,3.748,360,4.224,361,1.714,362,3.75,363,1.975,364,1.975,365,2.537,366,3.381,367,3.75,368,2.814,369,1.975,370,1.837]],["title/classes/OrdersDto.html",[21,0.122,364,1.832]],["body/classes/OrdersDto.html",[3,0.203,4,0.177,5,0.177,7,0.41,10,1.519,11,0.023,12,0.83,15,1.058,16,0.282,20,0.324,21,0.199,26,0.015,27,0.015,112,0.894,150,1.099,152,1.351,159,2.286,163,3.104,164,2.784,166,2.784,175,3.396,176,1.099,255,2.992,260,3.511,261,3.511,352,2.039,353,3.338,354,2.234,355,2.234,356,2.234,358,3.101,360,4.373,361,1.509,362,3.95,363,1.738,364,2.413,365,3.561,366,3.847,367,3.439,368,3.439,369,1.738,370,1.617,371,3.3,372,3.3,373,3.3,374,3.3,375,2.804,376,3.3,377,3.3]],["title/modules/PrismaModule.html",[28,0.966,43,2.149]],["body/modules/PrismaModule.html",[3,0.254,4,0.221,5,0.221,11,0.023,16,0.363,17,0.738,20,0.254,21,0.144,26,0.017,27,0.017,28,1.635,30,1.657,31,1.889,32,2.176,33,2.176,34,1.889,35,3.103,36,3.103,43,4.198,49,2.64,53,2.804,54,2.176,55,2.176,61,3.102,68,3.997,69,2.35,341,4.198,378,3.51,379,4.131,380,3.51,381,4.131,382,4.523,383,4.131]],["title/injectables/PrismaService.html",[49,1.31,95,0.909]],["body/injectables/PrismaService.html",[3,0.266,4,0.232,5,0.232,11,0.024,12,0.58,16,0.37,17,0.773,20,0.266,21,0.151,26,0.018,27,0.018,49,2.063,69,2.459,95,1.432,96,1.976,107,1.53,110,1.53,111,0.939,112,0.626,113,1.53,138,2.118,336,4.656,341,4.122,346,3.673,361,1.976,384,3.673,385,6.016,386,5.479,387,4.322,388,4.322,389,4.322,390,4.322,391,4.322,392,4.322,393,4.322,394,4.322]],["title/controllers/ProductController.html",[0,1.231,60,2.354]],["body/controllers/ProductController.html",[0,1.221,2,1.578,3,0.212,4,0.185,5,0.185,7,0.428,8,1.672,10,1.424,11,0.024,12,0.778,14,2.05,15,1.046,16,0.331,17,0.617,20,0.212,21,0.121,23,1.384,24,2.05,26,0.016,27,0.016,50,2.837,60,3.197,107,1.221,110,1.906,111,1.169,112,0.78,113,1.906,183,2.132,193,2.478,196,3.197,199,2.021,207,2.132,208,2.591,209,1.963,211,3.328,215,1.476,395,2.932,396,2.932,397,4.013,398,4.921,399,4.013,400,4.013,401,2.932,402,4.013,403,3.45,404,3.45,405,2.932,406,3.45,407,2.932,408,3.578,409,3.45,410,2.932,411,2.932,412,3.45,413,3.45,414,3.45,415,3.45,416,3.45,417,3.45,418,3.45,419,3.45]],["title/classes/ProductDto.html",[21,0.122,408,2.149]],["body/classes/ProductDto.html",[3,0.246,4,0.214,5,0.214,7,0.496,10,1.566,11,0.023,12,0.855,15,1.127,16,0.246,20,0.246,21,0.182,26,0.017,27,0.017,111,1.259,112,0.922,150,1.33,152,1.536,159,2.415,163,2.552,171,2.704,176,1.33,358,3.924,370,2.84,408,3.219,420,3.395,421,4.925,422,4.925,423,4.925,424,3.995,425,3.995,426,3.995,427,3.995,428,3.995]],["title/modules/ProductModule.html",[28,0.966,44,2.149]],["body/modules/ProductModule.html",[3,0.283,4,0.247,5,0.247,11,0.023,16,0.351,17,0.822,20,0.283,21,0.161,26,0.019,27,0.019,28,1.719,30,1.845,31,2.104,32,2.423,33,2.423,34,2.104,35,3.261,36,2.423,44,4.187,50,3.569,53,3.001,54,2.423,55,2.423,410,3.909,429,4.6,430,4.6,431,4.6]],["title/injectables/ProductService.html",[50,1.832,95,0.909]],["body/injectables/ProductService.html",[3,0.168,4,0.146,5,0.146,7,0.338,8,1.413,11,0.024,12,0.745,14,1.843,15,0.968,16,0.32,17,0.487,20,0.168,21,0.095,23,1.092,24,1.843,26,0.013,27,0.013,49,1.961,50,2.103,95,1.043,96,1.245,105,3.715,107,1.413,110,1.843,111,1.3,112,0.754,113,1.843,130,1.549,134,2.962,141,2.962,146,3.218,147,2.962,193,2.228,199,1.708,215,1.165,228,1.683,230,2.467,234,3.218,242,1.549,243,1.434,244,1.434,245,1.683,247,1.843,248,1.843,249,1.843,253,3.525,258,1.683,259,2.044,370,2.317,397,3.393,398,4.425,399,3.393,400,3.393,401,3.393,405,3.393,407,3.393,408,3.218,411,2.314,421,4.018,422,4.018,423,4.018,432,2.314,433,2.723,434,2.723,435,2.723,436,2.723,437,2.723,438,2.723,439,2.314,440,2.723,441,2.314,442,2.723]],["title/controllers/PurchaseOrderController.html",[0,1.231,58,2.354]],["body/controllers/PurchaseOrderController.html",[0,1.041,2,1.345,3,0.181,4,0.158,5,0.158,7,0.365,8,1.494,10,1.405,11,0.024,12,0.768,14,2.024,15,1.067,16,0.304,17,0.526,20,0.181,21,0.103,23,1.179,24,2.024,26,0.014,27,0.014,51,2.602,58,2.858,70,3.17,71,3.677,74,2.208,107,1.041,110,1.911,111,1.172,112,0.782,113,1.911,183,1.817,193,2.733,196,2.858,199,2.623,200,3.17,207,2.609,208,2.208,209,1.673,210,2.208,211,3.052,215,1.258,219,1.991,265,3.17,353,3.135,364,2.844,369,2.844,402,3.588,443,2.499,444,3.588,445,3.588,446,4.587,447,3.588,448,4.197,449,2.499,450,2.94,451,2.499,452,2.94,453,2.94,454,2.499,455,2.94,456,2.499,457,2.94,458,2.499,459,2.94,460,2.94,461,2.94,462,2.94,463,2.94,464,2.94,465,2.94,466,2.94,467,2.94]],["title/modules/PurchaseOrderModule.html",[28,0.966,45,2.149]],["body/modules/PurchaseOrderModule.html",[3,0.265,4,0.231,5,0.231,11,0.023,16,0.37,17,0.77,20,0.265,21,0.15,26,0.018,27,0.018,28,1.668,30,1.727,31,1.969,32,2.269,33,2.269,34,1.969,35,3.164,36,2.269,45,4.234,48,3.047,51,3.51,53,2.88,54,2.269,55,2.269,70,3.234,71,2.661,74,3.234,353,2.269,468,4.306,469,4.306,470,4.306,471,3.66]],["title/injectables/PurchaseOrderService.html",[51,1.832,95,0.909]],["body/injectables/PurchaseOrderService.html",[3,0.084,4,0.073,5,0.073,7,0.168,8,0.813,11,0.024,12,0.573,14,1.392,15,0.832,16,0.242,17,0.243,20,0.084,21,0.047,23,0.921,24,1.511,26,0.008,27,0.008,48,1.607,49,1.324,51,1.21,71,2.811,95,0.6,96,0.62,105,3.272,107,0.813,110,1.392,111,0.854,112,0.569,113,1.392,130,2.933,134,2.237,137,0.838,138,0.665,141,3.219,145,3.363,146,2.43,147,2.237,163,0.665,184,1.846,193,2.497,199,1.827,215,0.983,228,0.838,230,1.42,234,2.43,241,1.555,242,0.772,243,0.715,244,0.715,245,0.838,247,2.38,248,0.919,249,2.38,250,3.373,251,1.019,252,0.919,253,2.662,255,2.721,256,3.416,258,2.956,259,1.725,260,2.639,261,2.639,265,2.639,266,1.952,268,1.153,273,0.919,280,1.019,281,1.019,353,2.396,355,2.022,356,2.022,360,3.079,364,1.852,365,2.38,366,2.38,369,1.852,370,1.464,396,1.952,439,1.153,441,1.153,444,1.952,445,1.952,446,2.987,447,1.952,448,2.538,449,1.952,451,1.952,454,1.952,456,1.153,458,1.153,471,1.153,472,1.153,473,2.987,474,1.357,475,1.357,476,1.357,477,1.357,478,1.357,479,1.357,480,1.357,481,2.987,482,1.952,483,2.297,484,2.987,485,1.357,486,2.987,487,1.952,488,1.357,489,1.725,490,1.357,491,1.357,492,1.357,493,1.357,494,1.357,495,1.357,496,1.357,497,2.987,498,2.987,499,1.357,500,3.515,501,3.515,502,2.297,503,1.357,504,1.952,505,1.357,506,2.297,507,2.297,508,2.297,509,1.357,510,1.357,511,1.357,512,1.357,513,1.357,514,1.357,515,1.357,516,1.357,517,1.357,518,1.357,519,1.153,520,1.357,521,1.357,522,1.357,523,1.357,524,1.357,525,1.357,526,1.357,527,1.357,528,1.357,529,1.357,530,1.357,531,1.357,532,1.357,533,1.357,534,2.297,535,1.357,536,1.357,537,1.357,538,1.357,539,1.357,540,1.357,541,1.357,542,1.357,543,1.357,544,1.153,545,1.357,546,1.357,547,1.357,548,1.357,549,1.357,550,1.357,551,1.357,552,1.357,553,1.357,554,1.357,555,1.357,556,1.357,557,1.357,558,1.357,559,1.357,560,1.153,561,1.357]],["title/classes/SendSMSDto.html",[21,0.122,279,1.978]],["body/classes/SendSMSDto.html",[3,0.264,4,0.23,5,0.23,7,0.533,10,1.341,11,0.023,12,0.732,15,1.143,16,0.264,20,0.336,21,0.21,26,0.018,27,0.018,112,0.79,150,1.429,152,1.609,155,2.261,156,2.261,159,2.306,164,2.673,166,2.673,176,1.429,206,2.652,271,2.441,272,3.222,273,2.905,278,5.096,279,3.103,280,4.502,281,4.502,562,4.291,563,4.291]],["title/classes/SignInDto.html",[21,0.122,564,1.704]],["body/classes/SignInDto.html",[3,0.244,4,0.213,5,0.213,7,0.493,10,1.275,11,0.023,12,0.697,15,1.138,16,0.319,20,0.377,21,0.222,26,0.017,27,0.017,111,0.862,112,0.751,150,1.321,152,1.53,154,2.907,157,1.815,159,2.308,161,3.349,176,1.321,361,1.815,363,2.091,564,2.541,565,2.453,566,3.786,567,3.969,568,3.969,569,3.929,570,2.258,571,1.945,572,3.511,573,1.945]],["title/classes/SignUpDto.html",[21,0.122,571,1.704]],["body/classes/SignUpDto.html",[3,0.222,4,0.194,5,0.194,7,0.449,10,1.515,11,0.024,12,0.828,15,1.139,16,0.3,20,0.363,21,0.215,26,0.016,27,0.016,111,1.198,112,0.892,150,1.203,152,1.438,154,2.818,157,2.522,159,2.336,161,3.247,176,1.203,361,1.653,363,1.904,564,1.771,565,2.234,566,3.648,569,4.079,570,2.056,571,2.388,572,3.734,573,1.771,574,3.614,575,3.614,576,3.614,577,3.614,578,3.614]],["title/classes/UpdateCustomerDto.html",[21,0.122,177,1.832]],["body/classes/UpdateCustomerDto.html",[3,0.197,4,0.171,5,0.171,7,0.397,10,1.544,11,0.023,12,0.843,15,1.153,16,0.197,20,0.318,21,0.196,26,0.015,27,0.015,111,1.217,112,0.909,149,1.818,150,1.064,151,2.163,152,1.321,153,3.793,154,2.562,155,2.952,156,2.952,157,2.562,158,3.463,159,2.268,161,2.724,163,2.997,164,2.534,166,2.534,168,2.716,171,3.5,173,3.363,174,2.4,175,3.705,176,1.064,177,2.359,178,1.684,179,2.163,180,2.163,181,2.4,579,4.479,580,3.196,581,3.196,582,3.196,583,2.716,584,3.196,585,2.716,586,3.196,587,3.196,588,3.196,589,3.196,590,3.196]],["title/classes/UpdateOrdersDto.html",[21,0.122,369,1.832]],["body/classes/UpdateOrdersDto.html",[3,0.209,4,0.182,5,0.182,7,0.422,10,1.484,11,0.023,12,0.81,15,1.067,16,0.288,20,0.329,21,0.201,26,0.015,27,0.015,112,0.874,150,1.133,152,1.38,159,2.303,163,3.13,164,2.619,166,2.619,175,3.433,176,1.133,255,1.935,260,3.557,261,3.557,352,2.102,353,3.285,354,2.303,355,2.303,356,2.303,358,3.166,360,4.405,361,1.556,362,3.512,363,1.792,364,1.792,365,2.303,366,3.897,367,3.512,368,2.554,369,2.464,370,2.619,375,2.891,583,2.891,585,2.891,591,3.402,592,3.402,593,3.402,594,3.402,595,3.402]],["title/classes/UpdateUserDto.html",[21,0.122,573,1.704]],["body/classes/UpdateUserDto.html",[3,0.253,4,0.22,5,0.22,7,0.509,10,1.009,11,0.023,12,0.551,15,1.118,16,0.326,20,0.382,21,0.225,26,0.017,27,0.017,111,0.891,112,0.594,150,1.366,152,1.563,154,2.685,157,1.876,159,2.274,161,3.269,176,1.366,361,1.876,363,2.161,564,2.01,565,2.535,566,3.275,569,4.192,570,2.334,571,2.01,572,3.974,573,2.597,596,4.103]],["title/controllers/UserController.html",[0,1.231,57,2.354]],["body/controllers/UserController.html",[0,0.943,2,1.218,3,0.164,4,0.143,5,0.143,7,0.331,8,1.39,10,1.462,11,0.024,12,0.798,14,2.105,15,1.04,16,0.338,17,0.476,20,0.164,21,0.093,23,1.068,24,2.105,26,0.013,27,0.013,52,2.287,57,2.659,86,1.646,107,0.943,110,2.035,111,1.248,112,0.832,113,2.035,122,3.868,124,3.504,127,1.803,183,1.646,193,2.46,196,2.659,199,2.611,200,2.95,207,2.428,209,1.515,210,2,211,1.646,215,1.139,219,1.803,564,2.524,571,2.524,573,2.524,597,2.263,598,2.263,599,3.338,600,3.928,601,4.378,602,3.338,603,3.338,604,3.966,605,3.928,606,2.263,607,3.928,608,2.663,609,2.663,610,2.663,611,2.663,612,2.263,613,3.928,614,2.663,615,2.263,616,3.928,617,2.663,618,2.263,619,2.663,620,2.663,621,3.928,622,2.663,623,2.663,624,2.263,625,2.263,626,2.663,627,2.663,628,2.663,629,2.663,630,2.663,631,2.663,632,2.663,633,2.663,634,2.663,635,2.663,636,2.663,637,2.663,638,2.663,639,2.663,640,2.663]],["title/modules/UserModule.html",[28,0.966,46,2.149]],["body/modules/UserModule.html",[3,0.225,4,0.196,5,0.196,11,0.024,16,0.407,17,0.654,20,0.225,21,0.128,26,0.016,27,0.016,28,1.541,30,1.467,31,1.673,32,1.927,33,1.927,34,1.673,35,2.923,36,2.923,46,4.143,49,2.4,52,3.373,53,2.589,54,1.927,55,1.927,61,2.747,68,2.747,69,2.081,82,4.176,89,3.108,145,2.081,242,2.081,334,2.476,341,2.261,343,2.747,382,3.108,624,3.108,641,3.108,642,3.108,643,3.658,644,3.658,645,3.658,646,4.176,647,2.747,648,3.658,649,3.658,650,3.658,651,3.108,652,3.658,653,3.658,654,3.658,655,3.658]],["title/injectables/UserService.html",[52,1.704,95,0.909]],["body/injectables/UserService.html",[3,0.091,4,0.079,5,0.079,7,0.184,8,0.876,11,0.024,12,0.693,14,1.759,15,0.934,16,0.292,17,0.265,20,0.091,21,0.052,23,0.595,24,1.759,26,0.008,27,0.008,49,1.401,52,1.213,95,0.647,96,0.678,105,3.643,106,2.103,107,0.876,110,1.759,111,1.157,112,0.719,113,1.759,119,3.798,121,1.26,122,2.793,124,2.392,125,3.514,127,1.004,130,3.246,134,2.827,135,4.649,136,1.26,137,2.762,138,2.19,139,1.26,140,2.103,141,3.112,143,1.26,144,2.103,145,2.936,146,3.071,147,2.697,154,1.891,157,1.132,184,1.529,193,2.279,199,2.209,215,1.059,228,0.916,230,1.529,234,2.299,241,2.157,242,0.843,243,0.781,244,0.781,245,0.916,247,1.004,248,1.004,249,1.004,250,3.025,251,2.392,252,1.004,253,3.21,255,1.408,256,1.113,258,1.529,482,1.26,560,1.26,564,1.823,566,2.762,569,2.299,571,1.823,573,1.823,598,4.649,599,2.103,601,3.161,602,2.707,603,2.707,604,2.707,606,2.103,612,1.26,615,1.26,618,1.26,625,1.26,646,4.029,647,1.113,651,1.26,656,1.26,657,2.475,658,3.186,659,1.483,660,1.483,661,2.475,662,1.483,663,1.483,664,1.483,665,1.483,666,1.483,667,1.483,668,1.483,669,1.483,670,1.483,671,1.26,672,2.475,673,1.483,674,1.483,675,1.483,676,2.475,677,2.475,678,3.72,679,1.483,680,2.475,681,1.483,682,1.483,683,1.483,684,1.483,685,2.475,686,1.483,687,1.483,688,1.483,689,1.483,690,1.483,691,1.483,692,1.483,693,2.475,694,1.483,695,1.483,696,1.483,697,1.483,698,1.26,699,1.483,700,1.483,701,1.483,702,1.483]],["title/classes/UsersDto.html",[21,0.122,570,1.978]],["body/classes/UsersDto.html",[3,0.253,4,0.22,5,0.22,7,0.509,10,1.009,11,0.023,12,0.551,15,1.133,16,0.326,20,0.382,21,0.225,26,0.017,27,0.017,111,0.891,112,0.594,150,1.366,152,1.563,154,2.938,157,1.876,159,2.274,161,3.384,176,1.366,361,1.876,363,2.161,564,2.01,565,2.535,566,3.275,569,3.97,570,3.015,571,2.01,572,3.588,573,2.01,703,4.103]],["title/coverage.html",[704,3.566]],["body/coverage.html",[0,2.094,1,1.957,5,0.155,6,2.457,11,0.023,18,1.645,21,0.233,26,0.014,27,0.014,34,1.322,47,1.645,48,1.322,49,1.089,50,1.523,51,1.523,52,1.417,57,1.957,58,1.957,59,1.957,60,1.957,71,2.578,86,1.787,95,1.632,97,2.457,101,2.171,103,2.457,112,0.419,138,1.417,149,1.645,151,3.312,177,1.523,178,1.523,182,2.457,225,2.457,243,1.523,244,1.523,271,1.645,272,3.132,279,1.645,282,1.957,283,2.457,304,2.457,334,1.957,335,2.457,352,1.787,353,2.992,354,3.312,364,1.523,369,1.523,384,2.457,395,2.457,408,1.787,420,2.457,432,2.457,443,2.457,472,2.457,487,6.049,564,1.417,565,3.31,570,1.645,571,1.417,573,1.417,597,2.457,656,2.457,704,2.171,705,2.891,706,2.891,707,2.891,708,5.917,709,5.917,710,2.891,711,4.893,712,5.679,713,4.893,714,2.457,715,2.891,716,4.893,717,4.171,718,2.457,719,4.171,720,2.891,721,2.457,722,2.457,723,2.891,724,2.891,725,2.891]],["title/dependencies.html",[31,1.913,726,2.467]],["body/dependencies.html",[11,0.024,17,0.792,21,0.195,26,0.018,27,0.018,31,2.027,69,2.521,85,3.767,126,3.767,127,3.001,176,1.476,309,3.767,311,3.767,339,3.767,343,3.328,345,4.731,361,2.027,647,3.328,671,3.767,727,6.086,728,4.432,729,4.432,730,4.432,731,4.432,732,4.432,733,4.432,734,4.432,735,4.432,736,4.432,737,4.432,738,4.432,739,4.432,740,4.432,741,4.432,742,4.432,743,4.432,744,4.432,745,4.432,746,4.432]],["title/miscellaneous/functions.html",[747,1.965,748,3.555]],["body/miscellaneous/functions.html",[7,0.67,11,0.021,26,0.021,27,0.021,34,3.031,714,4.587,747,3.654,748,4.587,749,5.398]],["title/index.html",[7,0.36,750,2.903,751,2.903]],["body/index.html",[4,0.207,11,0.023,26,0.017,27,0.017,370,1.895,489,2.904,544,3.287,704,2.904,752,3.868,753,3.868,754,5.099,755,3.868,756,3.868,757,3.868,758,3.868,759,3.868,760,3.868,761,5.705,762,3.868,763,3.868,764,3.868,765,3.868,766,6.065,767,5.099,768,3.868,769,3.868,770,3.868,771,3.868,772,3.868,773,3.868,774,3.868,775,6.304,776,3.868,777,3.868,778,3.868,779,3.868,780,6.065,781,3.868,782,3.868,783,5.705,784,3.868,785,5.099,786,3.868,787,3.868,788,3.868,789,5.099,790,5.099,791,3.868,792,3.868,793,3.868,794,3.868,795,3.868,796,3.287,797,3.868,798,3.868,799,3.868,800,3.868,801,3.868,802,3.868,803,3.868,804,3.868,805,3.287,806,3.868,807,3.868,808,3.868,809,3.868,810,3.868,811,3.868,812,3.287]],["title/modules.html",[30,1.905]],["body/modules.html",[11,0.019,26,0.019,27,0.019,29,3.212,30,1.903,40,2.932,41,2.932,42,2.932,43,2.932,44,2.932,45,2.932,46,2.932,796,5.801,813,6.826,814,6.826,815,6.979,816,5.807,817,5.807]],["title/overview.html",[818,4.035]],["body/overview.html",[2,1.469,11,0.023,18,2.95,26,0.015,27,0.015,28,0.892,29,4.851,30,1.289,31,1.469,32,1.692,33,1.692,34,1.469,35,1.692,36,1.692,37,2.73,38,2.73,39,2.73,40,3.204,41,3.653,42,3.204,43,3.886,44,3.653,45,3.886,46,3.965,47,2.95,48,2.703,49,2.455,50,2.959,51,2.959,52,3.144,53,2.368,54,1.692,55,1.692,96,1.469,101,2.412,150,1.07,341,3.471,378,2.73,380,2.73,504,2.73,641,2.73,642,2.73,818,2.73,819,4.495,820,3.213,821,3.213]],["title/properties.html",[152,1.234,726,2.467]],["body/properties.html",[11,0.023,26,0.02,27,0.02,152,1.571,370,2.61,805,4.527,812,4.527,822,5.327,823,5.327,824,5.327]],["title/miscellaneous/variables.html",[747,1.965,825,3.555]],["body/miscellaneous/variables.html",[7,0.494,11,0.024,24,1.409,26,0.017,27,0.017,137,3.791,138,2.835,147,3.292,209,2.957,241,3.519,243,2.738,244,2.098,489,2.99,519,3.384,698,3.384,718,4.417,721,3.384,722,4.417,747,2.696,825,3.384,826,3.982,827,3.982,828,5.198,829,6.364,830,3.982,831,3.982,832,3.982,833,3.982,834,3.982,835,5.198,836,3.982,837,3.982,838,3.982,839,3.982,840,3.982,841,5.198,842,3.982,843,3.982,844,3.982,845,3.982,846,3.982,847,3.982,848,3.982,849,3.982,850,3.982,851,3.982,852,3.982]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":487,"title":{},"body":{"injectables/PurchaseOrderService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":823,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":504,"title":{},"body":{"injectables/PurchaseOrderService.html":{},"overview.html":{}}}],["10",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["10.0.0",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["12.0.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":821,"title":{},"body":{"overview.html":{}}}],["1761",{"_index":551,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["2",{"_index":519,"title":{},"body":{"injectables/PurchaseOrderService.html":{},"miscellaneous/variables.html":{}}}],["2.4.3",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["2605",{"_index":546,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["29319f7a71cc",{"_index":514,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["3.2.0",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["3.3.4",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["49e5",{"_index":512,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["5",{"_index":322,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["5.0.1",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["5.10.2",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["51.5175/7.4678",{"_index":324,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["51.525/7.4575",{"_index":320,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["5556",{"_index":511,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["5838",{"_index":550,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["6",{"_index":820,"title":{},"body":{"overview.html":{}}}],["6a0",{"_index":548,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["7.8.1",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["7083.ngrok",{"_index":553,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["8",{"_index":819,"title":{},"body":{"overview.html":{}}}],["8d80",{"_index":547,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["_count",{"_index":695,"title":{},"body":{"injectables/UserService.html":{}}}],["a475",{"_index":549,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["a59c",{"_index":552,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["active",{"_index":318,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["add",{"_index":490,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["address",{"_index":153,"title":{},"body":{"classes/CreateCustomerDto.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["admin",{"_index":686,"title":{},"body":{"injectables/UserService.html":{}}}],["afb8",{"_index":513,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["already",{"_index":698,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":797,"title":{},"body":{"index.html":{}}}],["apologize",{"_index":529,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["app",{"_index":777,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":760,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":317,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["array",{"_index":368,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["async",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["attempts",{"_index":535,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["authguard",{"_index":86,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["author",{"_index":805,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":817,"title":{},"body":{"modules.html":{}}}],["await",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":779,"title":{},"body":{"index.html":{}}}],["backers",{"_index":798,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.compare",{"_index":681,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["bcryptjs",{"_index":671,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["bigint",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biginthelper",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":207,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/GeofencingController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":815,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":813,"title":{},"body":{"modules.html":{}}}],["building",{"_index":755,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["category",{"_index":421,"title":{},"body":{"classes/ProductDto.html":{},"injectables/ProductService.html":{}}}],["caused",{"_index":531,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["checks",{"_index":319,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["checkwithinradius",{"_index":285,"title":{},"body":{"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{}}}],["checkwithinradius(id",{"_index":287,"title":{},"body":{"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/ProductDto.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":150,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/ProductDto.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_geofencingmodule",{"_index":300,"title":{},"body":{"modules/GeofencingModule.html":{}}}],["cluster_geofencingmodule_providers",{"_index":301,"title":{},"body":{"modules/GeofencingModule.html":{}}}],["cluster_prismamodule",{"_index":378,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":380,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":379,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_productmodule",{"_index":429,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":430,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_purchaseordermodule",{"_index":468,"title":{},"body":{"modules/PurchaseOrderModule.html":{}}}],["cluster_purchaseordermodule_providers",{"_index":469,"title":{},"body":{"modules/PurchaseOrderModule.html":{}}}],["cluster_usermodule",{"_index":641,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":642,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":643,"title":{},"body":{"modules/UserModule.html":{}}}],["code",{"_index":422,"title":{},"body":{"classes/ProductDto.html":{},"injectables/ProductService.html":{}}}],["commands",{"_index":782,"title":{},"body":{"index.html":{}}}],["config",{"_index":388,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config?.get('database_url",{"_index":393,"title":{},"body":{"injectables/PrismaService.html":{}}}],["configmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["configmodule.forroot",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["configservice.get('database_url",{"_index":394,"title":{},"body":{"injectables/PrismaService.html":{}}}],["configservice.get('jwt_secret",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["connect",{"_index":498,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["console.log(distanceinmetres",{"_index":332,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["const",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["constraint",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(config",{"_index":386,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(configservice",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(prisma",{"_index":228,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{}}}],["constructor(userservice",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CustomerController.html":{},"controllers/GeofencingController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CustomerController.html":{},"controllers/GeofencingController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('customer",{"_index":214,"title":{},"body":{"controllers/CustomerController.html":{}}}],["controller('geofencing",{"_index":295,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["controller('product",{"_index":412,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('purchase",{"_index":459,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["controller('user",{"_index":627,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CustomerController.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["cooperation.\\n\\nbest",{"_index":558,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["correct",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":704,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":259,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{}}}],["createcustomer",{"_index":226,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createcustomer(dto",{"_index":231,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createcustomerdto",{"_index":149,"title":{"classes/CreateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["created_at",{"_index":481,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["createorder",{"_index":444,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["createorder(@body",{"_index":463,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["createorder(dto",{"_index":449,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["customer",{"_index":184,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["customer.geofence_areas.is_active",{"_index":315,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["customer.geofence_areas.loc_lat",{"_index":327,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["customer.geofence_areas.loc_lon",{"_index":328,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["customer.geofence_areas.radius",{"_index":329,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["customer.service",{"_index":212,"title":{},"body":{"controllers/CustomerController.html":{}}}],["customer/customer.controller",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["customer/customer.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["customer/customer.service",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["customer_id",{"_index":365,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{}}}],["customercontroller",{"_index":59,"title":{"controllers/CustomerController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CustomerController.html":{},"coverage.html":{}}}],["customermodule",{"_index":40,"title":{"modules/CustomerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules.html":{},"overview.html":{}}}],["customerservice",{"_index":47,"title":{"injectables/CustomerService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":258,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["datasources",{"_index":390,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":180,"title":{},"body":{"classes/CreateCustomerDto.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["db",{"_index":391,"title":{},"body":{"injectables/PrismaService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"controllers/PurchaseOrderController.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UsersDto.html":{}}}],["default",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["delete",{"_index":208,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{}}}],["delete(':id",{"_index":402,"title":{},"body":{"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{}}}],["delete('id",{"_index":191,"title":{},"body":{"controllers/CustomerController.html":{}}}],["deletecustomer",{"_index":185,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["deletecustomer(@param('id",{"_index":221,"title":{},"body":{"controllers/CustomerController.html":{}}}],["deletecustomer(id",{"_index":190,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["deletedeliverypreference",{"_index":227,"title":{},"body":{"injectables/CustomerService.html":{}}}],["deletedeliverypreference(id",{"_index":235,"title":{},"body":{"injectables/CustomerService.html":{}}}],["deleteorder",{"_index":445,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["deleteorder(@param('id",{"_index":466,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["deleteorder(id",{"_index":451,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["deleteproduct",{"_index":397,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["deleteproduct(@param('id",{"_index":418,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(id",{"_index":401,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["delivery",{"_index":534,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["delivery_attempts",{"_index":517,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["delivery_date",{"_index":179,"title":{},"body":{"classes/CreateCustomerDto.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["delivery_person",{"_index":702,"title":{},"body":{"injectables/UserService.html":{}}}],["delivery_time",{"_index":181,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["deliverypreferencedto",{"_index":178,"title":{"classes/DeliveryPreferenceDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":249,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["description",{"_index":370,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distanceinmetres",{"_index":330,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["documentation",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["dotenv.config",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["download",{"_index":770,"title":{},"body":{"index.html":{}}}],["downloaded",{"_index":773,"title":{},"body":{"index.html":{}}}],["driver_id",{"_index":273,"title":{},"body":{"classes/GeoFencingDto.html":{},"injectables/GeofencingService.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{}}}],["driver_path",{"_index":482,"title":{},"body":{"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["dto",{"_index":199,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.delivery_date",{"_index":267,"title":{},"body":{"injectables/CustomerService.html":{}}}],["dto.role",{"_index":701,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.status",{"_index":520,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["dto/customer.dto",{"_index":213,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["dto/geofencing.dto",{"_index":294,"title":{},"body":{"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{}}}],["dto/orders.dto",{"_index":458,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["dto/product.dto",{"_index":411,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dto/user.dto",{"_index":625,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":786,"title":{},"body":{"index.html":{}}}],["efadf31d",{"_index":510,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["efficient",{"_index":756,"title":{},"body":{"index.html":{}}}],["email",{"_index":154,"title":{},"body":{"classes/CreateCustomerDto.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["ensure",{"_index":537,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["entries",{"_index":485,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["entries.map",{"_index":499,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["entries.push(result",{"_index":494,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["err",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["err.code",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.meta.target",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.response",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["error",{"_index":689,"title":{},"body":{"injectables/UserService.html":{}}}],["example",{"_index":766,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exist",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":654,"title":{},"body":{"modules/UserModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["extends",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["facility",{"_index":503,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["failed_to_deliver",{"_index":515,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["failedorder",{"_index":516,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["failedorder.delivery_attempts",{"_index":518,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["false",{"_index":560,"title":{},"body":{"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"coverage.html":{}}}],["fill",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":241,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":542,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["found",{"_index":679,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":754,"title":{},"body":{"index.html":{}}}],["free.app/customer/preference/${order.id}.\\n\\nyour",{"_index":554,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["function",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":748,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":539,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["geofence",{"_index":316,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["geofence_areas",{"_index":252,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["geofenceservice",{"_index":296,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["geofencing",{"_index":284,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["geofencing.controller",{"_index":303,"title":{},"body":{"modules/GeofencingModule.html":{}}}],["geofencing.service",{"_index":293,"title":{},"body":{"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{}}}],["geofencing/geofencing.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["geofencing/geofencing.service",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["geofencingcontroller",{"_index":282,"title":{"controllers/GeofencingController.html":{}},"body":{"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"coverage.html":{}}}],["geofencingdto",{"_index":271,"title":{"classes/GeoFencingDto.html":{}},"body":{"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"classes/SendSMSDto.html":{},"coverage.html":{}}}],["geofencingmodule",{"_index":41,"title":{"modules/GeofencingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules.html":{},"overview.html":{}}}],["geofencingserive",{"_index":473,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["geofencingservice",{"_index":48,"title":{"injectables/GeofencingService.html":{}},"body":{"modules/AppModule.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"coverage.html":{},"overview.html":{}}}],["geolib",{"_index":311,"title":{},"body":{"injectables/GeofencingService.html":{},"dependencies.html":{}}}],["geolib.getdistance",{"_index":331,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["geolib.ispointwithinradius",{"_index":326,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["get(':id",{"_index":196,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{}}}],["get('driver/:id",{"_index":607,"title":{},"body":{"controllers/UserController.html":{}}}],["get('verify",{"_index":621,"title":{},"body":{"controllers/UserController.html":{}}}],["getallcustomers",{"_index":186,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["getallorders",{"_index":446,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["getallproducts",{"_index":398,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["getcustomerbyid",{"_index":187,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["getcustomerbyid(@param('id",{"_index":217,"title":{},"body":{"controllers/CustomerController.html":{}}}],["getcustomerbyid(id",{"_index":195,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["getdriverinfo",{"_index":599,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getdriverinfo(@param('id",{"_index":639,"title":{},"body":{"controllers/UserController.html":{}}}],["getdriverinfo(id",{"_index":606,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getorderbyid",{"_index":447,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["getorderbyid(@param('id",{"_index":461,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["getorderbyid(id",{"_index":454,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["getproductbyid",{"_index":399,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["getproductbyid(@param('id",{"_index":414,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproductbyid(id",{"_index":405,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["getrequest",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{}}}],["getting",{"_index":750,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(id",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyemail",{"_index":600,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyemail(@param('id",{"_index":636,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyemail(id",{"_index":609,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers",{"_index":601,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["global",{"_index":382,"title":{},"body":{"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["graph",{"_index":816,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":793,"title":{},"body":{"index.html":{}}}],["guard",{"_index":101,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handling",{"_index":245,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["handling.ts",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashedpassword",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["hello",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":544,"title":{},"body":{"injectables/PurchaseOrderService.html":{},"index.html":{}}}],["hope",{"_index":526,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["https://nestjs.com",{"_index":809,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/en",{"_index":771,"title":{},"body":{"index.html":{}}}],["id",{"_index":193,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["important",{"_index":556,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["imports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":250,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["inconvenience",{"_index":530,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["initiated",{"_index":497,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AppService.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["install",{"_index":772,"title":{},"body":{"index.html":{}}}],["installed",{"_index":768,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":776,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["is_active",{"_index":508,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["isarray",{"_index":362,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["isdatestring",{"_index":173,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["isemail",{"_index":161,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{}}}],["isemail()@isoptional",{"_index":581,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["isenum",{"_index":363,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{}}}],["isenum(role",{"_index":572,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{}}}],["isenum(status",{"_index":367,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["isenum(status)@isoptional",{"_index":375,"title":{},"body":{"classes/OrdersDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["islatitude",{"_index":164,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/SendSMSDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["islatitude()@isoptional",{"_index":583,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["islongitude",{"_index":166,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/SendSMSDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["islongitude()@isoptional",{"_index":585,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["isnotempty",{"_index":174,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["isnumber",{"_index":358,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/ProductDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["isnumberstring",{"_index":171,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/ProductDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["isnumberstring()@isoptional",{"_index":589,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["isoptional",{"_index":175,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["isoptional()@isstring",{"_index":168,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["ispasswordmatched",{"_index":680,"title":{},"body":{"injectables/UserService.html":{}}}],["isphonenumber",{"_index":278,"title":{},"body":{"classes/GeoFencingDto.html":{},"classes/SendSMSDto.html":{}}}],["isstring",{"_index":159,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/ProductDto.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{}}}],["isstring()@isoptional",{"_index":579,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["isvalid",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["isverified",{"_index":700,"title":{},"body":{"injectables/UserService.html":{}}}],["iswithinradius",{"_index":325,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["join",{"_index":800,"title":{},"body":{"index.html":{}}}],["json.stringify",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":645,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":650,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtservice",{"_index":646,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["jwtstrategy",{"_index":334,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["kamil",{"_index":806,"title":{},"body":{"index.html":{}}}],["key",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["km",{"_index":323,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["latitude",{"_index":155,"title":{},"body":{"classes/CreateCustomerDto.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"injectables/GeofencingService.html":{},"classes/SendSMSDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":812,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":790,"title":{},"body":{"index.html":{}}}],["linked",{"_index":543,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["loc_lat",{"_index":260,"title":{},"body":{"injectables/CustomerService.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{}}}],["loc_lon",{"_index":261,"title":{},"body":{"injectables/CustomerService.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{}}}],["locker/locker.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["lockercontroller",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["lockermodule",{"_index":42,"title":{"modules/LockerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LockerModule.html":{},"modules.html":{},"overview.html":{}}}],["lockerservice",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["longitude",{"_index":156,"title":{},"body":{"classes/CreateCustomerDto.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"injectables/GeofencingService.html":{},"classes/SendSMSDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":281,"title":{},"body":{"classes/GeoFencingDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{}}}],["metadata",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":747,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":789,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":157,"title":{},"body":{"classes/CreateCustomerDto.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/GeofencingModule.html":{},"modules/LockerModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/GeofencingModule.html":{},"modules/LockerModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/GeofencingModule.html":{},"modules/LockerModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":802,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":807,"title":{},"body":{"index.html":{}}}],["name",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["nest",{"_index":761,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":811,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":647,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["nestjsbackend",{"_index":688,"title":{},"body":{"injectables/UserService.html":{}}}],["new",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/PrismaService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nhello",{"_index":524,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["nhttps://e316",{"_index":545,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["node",{"_index":767,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":753,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":310,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["notfoundexception(err.meta.cause",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":775,"title":{},"body":{"index.html":{}}}],["nto",{"_index":536,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["null",{"_index":684,"title":{},"body":{"injectables/UserService.html":{}}}],["number",{"_index":163,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/ProductDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{}}}],["number(radius",{"_index":262,"title":{},"body":{"injectables/CustomerService.html":{}}}],["observable",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{}}}],["one",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":791,"title":{},"body":{"index.html":{}}}],["optional",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["order",{"_index":265,"title":{},"body":{"injectables/CustomerService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["order.controller",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["order.controller.ts",{"_index":443,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"coverage.html":{}}}],["order.controller.ts:23",{"_index":453,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["order.controller.ts:28",{"_index":455,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["order.controller.ts:35",{"_index":450,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["order.controller.ts:42",{"_index":457,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["order.controller.ts:53",{"_index":452,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["order.customer.mobile",{"_index":523,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.customer.name},\\nwe",{"_index":525,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.customer_id",{"_index":507,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.delivery_attempts",{"_index":268,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/PurchaseOrderService.html":{}}}],["order.driver_id",{"_index":509,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.id",{"_index":502,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["order.module.ts",{"_index":470,"title":{},"body":{"modules/PurchaseOrderModule.html":{}}}],["order.service",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{}}}],["order.service.ts",{"_index":472,"title":{},"body":{"injectables/PurchaseOrderService.html":{},"coverage.html":{}}}],["order.service.ts:14",{"_index":474,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.service.ts:178",{"_index":479,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.service.ts:20",{"_index":477,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.service.ts:301",{"_index":476,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.service.ts:47",{"_index":478,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order.service.ts:84",{"_index":475,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order/dto/orders.dto.ts",{"_index":354,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/UpdateOrdersDto.html":{},"coverage.html":{}}}],["order/dto/orders.dto.ts:14",{"_index":371,"title":{},"body":{"classes/OrdersDto.html":{}}}],["order/dto/orders.dto.ts:17",{"_index":377,"title":{},"body":{"classes/OrdersDto.html":{}}}],["order/dto/orders.dto.ts:21",{"_index":376,"title":{},"body":{"classes/OrdersDto.html":{}}}],["order/dto/orders.dto.ts:24",{"_index":372,"title":{},"body":{"classes/OrdersDto.html":{}}}],["order/dto/orders.dto.ts:27",{"_index":373,"title":{},"body":{"classes/OrdersDto.html":{}}}],["order/dto/orders.dto.ts:30",{"_index":374,"title":{},"body":{"classes/OrdersDto.html":{}}}],["order/dto/orders.dto.ts:35",{"_index":357,"title":{},"body":{"classes/OrderEntriesDto.html":{}}}],["order/dto/orders.dto.ts:38",{"_index":359,"title":{},"body":{"classes/OrderEntriesDto.html":{}}}],["order/dto/orders.dto.ts:44",{"_index":594,"title":{},"body":{"classes/UpdateOrdersDto.html":{}}}],["order/dto/orders.dto.ts:48",{"_index":592,"title":{},"body":{"classes/UpdateOrdersDto.html":{}}}],["order/dto/orders.dto.ts:52",{"_index":593,"title":{},"body":{"classes/UpdateOrdersDto.html":{}}}],["order/dto/orders.dto.ts:55",{"_index":591,"title":{},"body":{"classes/UpdateOrdersDto.html":{}}}],["order/dto/orders.dto.ts:58",{"_index":595,"title":{},"body":{"classes/UpdateOrdersDto.html":{}}}],["order/purchase",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"coverage.html":{}}}],["order_entries",{"_index":255,"title":{},"body":{"injectables/CustomerService.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{},"injectables/UserService.html":{}}}],["order_entries.length",{"_index":488,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["order_history",{"_index":256,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["order_id",{"_index":206,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/GeoFencingDto.html":{},"injectables/GeofencingService.html":{},"classes/SendSMSDto.html":{}}}],["orderby",{"_index":247,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["orderentriesdto",{"_index":352,"title":{"classes/OrderEntriesDto.html":{}},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/UpdateOrdersDto.html":{},"coverage.html":{}}}],["orders",{"_index":251,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["ordersdto",{"_index":364,"title":{"classes/OrdersDto.html":{}},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{},"coverage.html":{}}}],["out",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["out_for_delivery",{"_index":505,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["overview",{"_index":818,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p2025",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":726,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":209,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/GeofencingController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["param('id",{"_index":219,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/GeofencingController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["passport",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":648,"title":{},"body":{"modules/UserModule.html":{}}}],["passportstrategy",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":566,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["patch",{"_index":210,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":200,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{}}}],["phone",{"_index":280,"title":{},"body":{"classes/GeoFencingDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{}}}],["please",{"_index":489,"title":{},"body":{"injectables/PurchaseOrderService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":211,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/GeofencingController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{}}}],["post(':id",{"_index":288,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["post('login",{"_index":613,"title":{},"body":{"controllers/UserController.html":{}}}],["post('send",{"_index":291,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["post('set",{"_index":203,"title":{},"body":{"controllers/CustomerController.html":{}}}],["post('signup",{"_index":616,"title":{},"body":{"controllers/UserController.html":{}}}],["preference",{"_index":483,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["preference/:id",{"_index":204,"title":{},"body":{"controllers/CustomerController.html":{}}}],["preferences",{"_index":540,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["prefix",{"_index":183,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/GeofencingController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseOrderController.html":{},"controllers/UserController.html":{}}}],["prerequisites",{"_index":765,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":230,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":383,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":361,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":385,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaerror",{"_index":243,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prismaerror(err",{"_index":253,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["prismamodule",{"_index":43,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":49,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":215,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_expires",{"_index":655,"title":{},"body":{"modules/UserModule.html":{}}}],["process.env.jwt_secret",{"_index":652,"title":{},"body":{"modules/UserModule.html":{}}}],["process.env.twilio_account_sid",{"_index":313,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["process.env.twilio_auth_token",{"_index":314,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["product",{"_index":396,"title":{},"body":{"controllers/ProductController.html":{},"injectables/PurchaseOrderService.html":{}}}],["product.service",{"_index":410,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.weight",{"_index":495,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["product/product.controller",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["product/product.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["product/product.service",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["product_id",{"_index":355,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{}}}],["productcontroller",{"_index":60,"title":{"controllers/ProductController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["productdto",{"_index":408,"title":{"classes/ProductDto.html":{}},"body":{"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["productmodule",{"_index":44,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":491,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["productservice",{"_index":50,"title":{"injectables/ProductService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["programinstallation",{"_index":774,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":752,"title":{},"body":{"index.html":{}}}],["project",{"_index":792,"title":{},"body":{"index.html":{}}}],["promise",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":152,"title":{"properties.html":{}},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"injectables/GeofencingService.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/ProductDto.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{},"properties.html":{}}}],["provide",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["purchase",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{}}}],["purchaseordercontroller",{"_index":58,"title":{"controllers/PurchaseOrderController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PurchaseOrderController.html":{},"coverage.html":{}}}],["purchaseordermodule",{"_index":45,"title":{"modules/PurchaseOrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PurchaseOrderModule.html":{},"modules.html":{},"overview.html":{}}}],["purchaseorderservice",{"_index":51,"title":{"injectables/PurchaseOrderService.html":{}},"body":{"modules/AppModule.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"coverage.html":{},"overview.html":{}}}],["quantity",{"_index":356,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{}}}],["radius",{"_index":158,"title":{},"body":{"classes/CreateCustomerDto.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"injectables/GeofencingService.html":{},"classes/UpdateCustomerDto.html":{}}}],["reached_facility",{"_index":521,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["read",{"_index":801,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["recent",{"_index":532,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["record",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["records",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["regards,\\ntrustntrack",{"_index":559,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["repository",{"_index":764,"title":{},"body":{"index.html":{}}}],["req",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["req.headers.token",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["request",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["required",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":492,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":569,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["run",{"_index":780,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["same",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["satisfaction",{"_index":555,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["scalable",{"_index":757,"title":{},"body":{"index.html":{}}}],["secret",{"_index":651,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["secretorkey",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":696,"title":{},"body":{"injectables/UserService.html":{}}}],["sendsmsdto",{"_index":279,"title":{"classes/SendSMSDto.html":{}},"body":{"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"classes/SendSMSDto.html":{},"coverage.html":{}}}],["sendsmsnotification",{"_index":286,"title":{},"body":{"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{}}}],["sendsmsnotification(@body",{"_index":298,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["sendsmsnotification(dto",{"_index":290,"title":{},"body":{"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{}}}],["serialport",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["server",{"_index":758,"title":{},"body":{"index.html":{}}}],["shared/guards/auth.guard",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":759,"title":{},"body":{"index.html":{}}}],["signin",{"_index":602,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["signin(@body",{"_index":630,"title":{},"body":{"controllers/UserController.html":{}}}],["signin(dto",{"_index":612,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["signindto",{"_index":564,"title":{"classes/SignInDto.html":{}},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":653,"title":{},"body":{"modules/UserModule.html":{}}}],["signup",{"_index":603,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["signup(@body",{"_index":628,"title":{},"body":{"controllers/UserController.html":{}}}],["signup(dto",{"_index":615,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["signupdto",{"_index":571,"title":{"classes/SignUpDto.html":{}},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"coverage.html":{}}}],["smooth",{"_index":538,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"modules/GeofencingModule.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"modules/LockerModule.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"index.html":{}}}],["sponsors",{"_index":795,"title":{},"body":{"index.html":{}}}],["src/.../error",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helper.ts",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":97,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:4",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["src/customer/customer.controller.ts",{"_index":182,"title":{},"body":{"controllers/CustomerController.html":{},"coverage.html":{}}}],["src/customer/customer.controller.ts:23",{"_index":194,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:28",{"_index":197,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:35",{"_index":201,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:46",{"_index":192,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:53",{"_index":205,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.module.ts",{"_index":224,"title":{},"body":{"modules/CustomerModule.html":{}}}],["src/customer/customer.service.ts",{"_index":225,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/customer/customer.service.ts:112",{"_index":233,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:124",{"_index":240,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:14",{"_index":229,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:187",{"_index":236,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:19",{"_index":237,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:35",{"_index":238,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:63",{"_index":232,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:94",{"_index":239,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/dto/customer.dto.ts",{"_index":151,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["src/customer/dto/customer.dto.ts:14",{"_index":170,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:17",{"_index":162,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:21",{"_index":169,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:24",{"_index":160,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:27",{"_index":165,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:30",{"_index":167,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:33",{"_index":172,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:39",{"_index":588,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:43",{"_index":582,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:47",{"_index":587,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:51",{"_index":580,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:55",{"_index":584,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:59",{"_index":586,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:63",{"_index":590,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["src/customer/dto/customer.dto.ts:68",{"_index":269,"title":{},"body":{"classes/DeliveryPreferenceDto.html":{}}}],["src/customer/dto/customer.dto.ts:71",{"_index":270,"title":{},"body":{"classes/DeliveryPreferenceDto.html":{}}}],["src/geofencing/dto/geofencing.dto.ts",{"_index":272,"title":{},"body":{"classes/GeoFencingDto.html":{},"classes/SendSMSDto.html":{},"coverage.html":{}}}],["src/geofencing/dto/geofencing.dto.ts:10",{"_index":275,"title":{},"body":{"classes/GeoFencingDto.html":{}}}],["src/geofencing/dto/geofencing.dto.ts:13",{"_index":276,"title":{},"body":{"classes/GeoFencingDto.html":{}}}],["src/geofencing/dto/geofencing.dto.ts:16",{"_index":277,"title":{},"body":{"classes/GeoFencingDto.html":{}}}],["src/geofencing/dto/geofencing.dto.ts:19",{"_index":274,"title":{},"body":{"classes/GeoFencingDto.html":{}}}],["src/geofencing/dto/geofencing.dto.ts:24",{"_index":563,"title":{},"body":{"classes/SendSMSDto.html":{}}}],["src/geofencing/dto/geofencing.dto.ts:27",{"_index":562,"title":{},"body":{"classes/SendSMSDto.html":{}}}],["src/geofencing/geofencing.controller.ts",{"_index":283,"title":{},"body":{"controllers/GeofencingController.html":{},"coverage.html":{}}}],["src/geofencing/geofencing.controller.ts:20",{"_index":289,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["src/geofencing/geofencing.controller.ts:31",{"_index":292,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["src/geofencing/geofencing.module.ts",{"_index":302,"title":{},"body":{"modules/GeofencingModule.html":{}}}],["src/geofencing/geofencing.service",{"_index":471,"title":{},"body":{"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{}}}],["src/geofencing/geofencing.service.ts",{"_index":304,"title":{},"body":{"injectables/GeofencingService.html":{},"coverage.html":{}}}],["src/geofencing/geofencing.service.ts:129",{"_index":308,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["src/geofencing/geofencing.service.ts:16",{"_index":306,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["src/geofencing/geofencing.service.ts:27",{"_index":307,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["src/locker/locker.module.ts",{"_index":351,"title":{},"body":{"modules/LockerModule.html":{}}}],["src/main.ts",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":381,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":242,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":384,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":387,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/product/dto/product.dto.ts",{"_index":420,"title":{},"body":{"classes/ProductDto.html":{},"coverage.html":{}}}],["src/product/dto/product.dto.ts:12",{"_index":427,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/product/dto/product.dto.ts:15",{"_index":426,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/product/dto/product.dto.ts:18",{"_index":424,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/product/dto/product.dto.ts:21",{"_index":428,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/product/dto/product.dto.ts:9",{"_index":425,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/product/product.controller.ts",{"_index":395,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:19",{"_index":404,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:24",{"_index":406,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:29",{"_index":409,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:34",{"_index":403,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":431,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":432,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:12",{"_index":435,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:24",{"_index":436,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:38",{"_index":437,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:7",{"_index":433,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:70",{"_index":434,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/purchase",{"_index":353,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"controllers/PurchaseOrderController.html":{},"modules/PurchaseOrderModule.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{},"coverage.html":{}}}],["src/shared/error",{"_index":244,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/guards/auth.guard",{"_index":626,"title":{},"body":{"controllers/UserController.html":{}}}],["src/shared/guards/auth.guard.ts",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/shared/guards/auth.guard.ts:12",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/shared/guards/auth.guard.ts:15",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/shared/guards/auth.guard.ts:28",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/shared/helper.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/jwt/jwt.strategy",{"_index":649,"title":{},"body":{"modules/UserModule.html":{}}}],["src/shared/jwt/jwt.strategy.ts",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/shared/jwt/jwt.strategy.ts:13",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/user/dto/user.dto.ts",{"_index":565,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:10",{"_index":703,"title":{},"body":{"classes/UsersDto.html":{}}}],["src/user/dto/user.dto.ts:15",{"_index":576,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/user/dto/user.dto.ts:18",{"_index":574,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/user/dto/user.dto.ts:21",{"_index":575,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/user/dto/user.dto.ts:24",{"_index":577,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/user/dto/user.dto.ts:27",{"_index":578,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/user/dto/user.dto.ts:32",{"_index":567,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/user/dto/user.dto.ts:35",{"_index":568,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/user/dto/user.dto.ts:40",{"_index":596,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/user/user.controller.ts",{"_index":597,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:27",{"_index":617,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:32",{"_index":614,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":622,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:43",{"_index":611,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":610,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:53",{"_index":619,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:61",{"_index":608,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":644,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/user/user.service.ts",{"_index":656,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:109",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:122",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:148",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:170",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:19",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:194",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:226",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:25",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:62",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["start:devoptional",{"_index":781,"title":{},"body":{"index.html":{}}}],["started",{"_index":751,"title":{"index.html":{}},"body":{}}],["starter",{"_index":763,"title":{},"body":{"index.html":{}}}],["starting",{"_index":778,"title":{},"body":{"index.html":{}}}],["statements",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":360,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{}}}],["stay",{"_index":803,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{}}}],["super",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["support",{"_index":796,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":814,"title":{},"body":{"modules.html":{}}}],["switchtohttp",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["system",{"_index":769,"title":{},"body":{"index.html":{}}}],["table",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":783,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":788,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":787,"title":{},"body":{"index.html":{}}}],["tests",{"_index":785,"title":{},"body":{"index.html":{}}}],["thank",{"_index":557,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["thanks",{"_index":794,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.customerservice.deletecustomer",{"_index":222,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.getallcustomers",{"_index":216,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.getcustomerbyid",{"_index":218,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.updatecustomer",{"_index":220,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.upsertdeliverypreference",{"_index":223,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.geofenceservice.checkwithinradius",{"_index":297,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["this.geofenceservice.sendsmsnotification",{"_index":299,"title":{},"body":{"controllers/GeofencingController.html":{}}}],["this.geofencingserive.sendsmsnotification",{"_index":522,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["this.jwtservice.sign",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.verify(token",{"_index":687,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.customer.create",{"_index":257,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.prisma.customer.delete",{"_index":264,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.prisma.customer.findmany",{"_index":246,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.prisma.customer.findunique",{"_index":254,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{}}}],["this.prisma.customer.update",{"_index":263,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.prisma.driver_path.create",{"_index":333,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["this.prisma.geofence_area.update",{"_index":506,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["this.prisma.order_entries.create",{"_index":493,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["this.prisma.product.findmany",{"_index":438,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":439,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{}}}],["this.prisma.product.update",{"_index":442,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.upsert",{"_index":440,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.purchase_order.create",{"_index":496,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["this.prisma.purchase_order.delete",{"_index":561,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["this.prisma.purchase_order.findmany",{"_index":480,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["this.prisma.purchase_order.findunique",{"_index":266,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/PurchaseOrderService.html":{}}}],["this.prisma.purchase_order.update",{"_index":501,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["this.prisma.user.create",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":694,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":678,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":699,"title":{},"body":{"injectables/UserService.html":{}}}],["this.productservice.deleteproduct(id",{"_index":419,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getallproducts",{"_index":413,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getproductbyid(id",{"_index":415,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.upsertproduct(dto",{"_index":417,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.purchaseorderservice.createorder",{"_index":464,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["this.purchaseorderservice.deleteorder",{"_index":467,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["this.purchaseorderservice.getallorders",{"_index":460,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["this.purchaseorderservice.getorderbyid",{"_index":462,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["this.purchaseorderservice.updateorder",{"_index":465,"title":{},"body":{"controllers/PurchaseOrderController.html":{}}}],["this.twilioclient",{"_index":312,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["this.userservice.getdriverinfo(id",{"_index":640,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuser(id",{"_index":637,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getusers",{"_index":635,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.signin(dto",{"_index":631,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.signup(dto",{"_index":629,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuser(id",{"_index":638,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.verifyjwt",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.userservice.verifysession(req",{"_index":633,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verifyjwt",{"_index":691,"title":{},"body":{"injectables/UserService.html":{}}}],["this.verifysession(request",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["throw",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/GeofencingService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["token.tostring",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["total_weight",{"_index":486,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["touch",{"_index":804,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/PurchaseOrderService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["try",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["twilio",{"_index":309,"title":{},"body":{"injectables/GeofencingService.html":{},"dependencies.html":{}}}],["twilioclient",{"_index":305,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["twitter",{"_index":810,"title":{},"body":{"index.html":{}}}],["type",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"controllers/GeofencingController.html":{},"injectables/GeofencingService.html":{},"injectables/JwtStrategy.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"coverage.html":{}}}],["typeof",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":762,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["unique",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":784,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":234,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/GeofencingService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":824,"title":{},"body":{"properties.html":{}}}],["unsuccessful",{"_index":533,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["update",{"_index":441,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{}}}],["updatecustomer",{"_index":188,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["updatecustomer(id",{"_index":198,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["updatecustomerdto",{"_index":177,"title":{"classes/UpdateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["updated_at",{"_index":248,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseOrderService.html":{},"injectables/UserService.html":{}}}],["updated_by",{"_index":484,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["updatedorder",{"_index":500,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["updateorder",{"_index":448,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["updateorder(id",{"_index":456,"title":{},"body":{"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{}}}],["updateordersdto",{"_index":369,"title":{"classes/UpdateOrdersDto.html":{}},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"controllers/PurchaseOrderController.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":604,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuser(id",{"_index":618,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserdto",{"_index":573,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersDto.html":{},"coverage.html":{}}}],["upsertdeliverypreference",{"_index":189,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["upsertdeliverypreference(order_id",{"_index":202,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["upsertproduct",{"_index":400,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["upsertproduct(@body",{"_index":416,"title":{},"body":{"controllers/ProductController.html":{}}}],["upsertproduct(dto",{"_index":407,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["url",{"_index":392,"title":{},"body":{"injectables/PrismaService.html":{}}}],["useclass",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":623,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":634,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":598,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["user.isverified",{"_index":697,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":682,"title":{},"body":{"injectables/UserService.html":{}}}],["user.role",{"_index":683,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":624,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.service",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["user_id",{"_index":366,"title":{},"body":{"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"injectables/PurchaseOrderService.html":{},"classes/UpdateOrdersDto.html":{}}}],["usercontroller",{"_index":57,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["usermodule",{"_index":46,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":693,"title":{},"body":{"injectables/UserService.html":{}}}],["usersdto",{"_index":570,"title":{"classes/UsersDto.html":{}},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{},"coverage.html":{}}}],["userservice",{"_index":52,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":541,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["valid",{"_index":692,"title":{},"body":{"injectables/UserService.html":{}}}],["validator",{"_index":176,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/DeliveryPreferenceDto.html":{},"classes/GeoFencingDto.html":{},"classes/OrderEntriesDto.html":{},"classes/OrdersDto.html":{},"classes/ProductDto.html":{},"classes/SendSMSDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateOrdersDto.html":{},"classes/UpdateUserDto.html":{},"classes/UsersDto.html":{},"dependencies.html":{}}}],["value",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value.tostring",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":825,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":685,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyjwt",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyjwt(token",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["verifysession",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["verifysession(@req",{"_index":690,"title":{},"body":{"injectables/UserService.html":{}}}],["verifysession(req",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["verifytoken",{"_index":605,"title":{},"body":{"controllers/UserController.html":{}}}],["verifytoken(@req",{"_index":632,"title":{},"body":{"controllers/UserController.html":{}}}],["verifytoken(req",{"_index":620,"title":{},"body":{"controllers/UserController.html":{}}}],["version",{"_index":822,"title":{},"body":{"properties.html":{}}}],["website",{"_index":808,"title":{},"body":{"index.html":{}}}],["weight",{"_index":423,"title":{},"body":{"classes/ProductDto.html":{},"injectables/ProductService.html":{}}}],["well",{"_index":528,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["within",{"_index":321,"title":{},"body":{"injectables/GeofencingService.html":{}}}],["world",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":389,"title":{},"body":{"injectables/PrismaService.html":{}}}],["you'd",{"_index":799,"title":{},"body":{"index.html":{}}}],["you're",{"_index":527,"title":{},"body":{"injectables/PurchaseOrderService.html":{}}}],["zoom",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/GeofencingModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseOrderModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCustomerModule\n\nCustomerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nGeofencingModule\n\nGeofencingModule\n\nAppModule -->\n\nGeofencingModule->AppModule\n\n\n\n\n\nLockerModule\n\nLockerModule\n\nAppModule -->\n\nLockerModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nPurchaseOrderModule\n\nPurchaseOrderModule\n\nAppModule -->\n\nPurchaseOrderModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nAppModule -->\n\nCustomerService->AppModule\n\n\n\n\n\nGeofencingService\n\nGeofencingService\n\nAppModule -->\n\nGeofencingService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nProductService\n\nProductService\n\nAppModule -->\n\nProductService->AppModule\n\n\n\n\n\nPurchaseOrderService\n\nPurchaseOrderService\n\nAppModule -->\n\nPurchaseOrderService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            CustomerService\n                        \n                        \n                            GeofencingService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductService\n                        \n                        \n                            PurchaseOrderService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UserController\n                        \n                        \n                            PurchaseOrderController\n                        \n                        \n                            CustomerController\n                        \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CustomerModule\n                        \n                        \n                            GeofencingModule\n                        \n                        \n                            LockerModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            PurchaseOrderModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserController } from './user/user.controller';\nimport { UserService } from './user/user.service';\nimport { UserModule } from './user/user.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { PurchaseOrderController } from './purchase-order/purchase-order.controller';\nimport { PurchaseOrderModule } from './purchase-order/purchase-order.module';\nimport { PurchaseOrderService } from './purchase-order/purchase-order.service';\nimport { CustomerController } from './customer/customer.controller';\nimport { CustomerService } from './customer/customer.service';\nimport { CustomerModule } from './customer/customer.module';\nimport { ProductController } from './product/product.controller';\nimport { ProductModule } from './product/product.module';\nimport { ProductService } from './product/product.service';\nimport { LockerModule } from './locker/locker.module';\nimport * as dotenv from 'dotenv';\nimport { GeofencingModule } from './geofencing/geofencing.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthGuard } from './shared/guards/auth.guard';\nimport { GeofencingService } from './geofencing/geofencing.service';\ndotenv.config();\n\n@Module({\n  imports: [\n    UserModule,\n    PrismaModule,\n    ConfigModule.forRoot(),\n    PurchaseOrderModule,\n    CustomerModule,\n    ProductModule,\n    LockerModule,\n    GeofencingModule,\n  ],\n  controllers: [\n    AppController,\n    UserController,\n    PurchaseOrderController,\n    CustomerController,\n    ProductController,\n    // LockerController,\n  ],\n  providers: [\n    AppService,\n    UserService,\n    PrismaService,\n    PurchaseOrderService,\n    CustomerService,\n    ProductService,\n    GeofencingService,\n    // {\n    //   provide: APP_GUARD,\n    //   useClass: AuthGuard,\n    // },\n    // LockerService,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/shared/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Async\n                                verifySession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/guards/auth.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifySession\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifySession(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/guards/auth.guard.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Request } from 'express';\nimport { UserService } from 'src/user/user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private userService: UserService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ):\n    | boolean\n    | Promise\n    | Observable {\n    const request = context\n      .switchToHttp()\n      .getRequest();\n\n    return this.verifySession(request);\n  }\n\n  async verifySession(\n    req: Request,\n  ): Promise {\n    try {\n      const token = req.headers.token;\n\n      if (!token) {\n        throw new UnauthorizedException(\n          'Token not provided',\n        );\n      }\n\n      const isValid =\n        await this.userService.verifyJwt(\n          token.toString(),\n        );\n\n      if (!isValid) {\n        throw new UnauthorizedException(\n          'Invalid token',\n        );\n      }\n\n      return true;\n    } catch (err) {\n      throw new UnauthorizedException(\n        err.response,\n      );\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCustomerDto.html":{"url":"classes/CreateCustomerDto.html","title":"class - CreateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                latitude\n                            \n                            \n                                    \n                                longitude\n                            \n                            \n                                    \n                                    \n                                mobile\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                radius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLatitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLongitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        radius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsDateString,\n  IsEmail,\n  IsLatitude,\n  IsLongitude,\n  IsNotEmpty,\n  IsNumberString,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateCustomerDto {\n  @IsString()\n  name: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsOptional()\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  address: string;\n\n  @IsLatitude()\n  latitude: number;\n\n  @IsLongitude()\n  longitude: number;\n\n  @IsNumberString()\n  radius: string;\n}\n\nexport class UpdateCustomerDto {\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @IsOptional()\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  @IsOptional()\n  address: string;\n\n  @IsLatitude()\n  @IsOptional()\n  latitude: number;\n\n  @IsLongitude()\n  @IsOptional()\n  longitude: number;\n\n  @IsNumberString()\n  @IsOptional()\n  radius: string;\n}\n\nexport class DeliveryPreferenceDto {\n  @IsDateString()\n  delivery_date: Date;\n\n  @IsString()\n  delivery_time: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerController.html":{"url":"controllers/CustomerController.html","title":"controller - CustomerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deleteCustomer\n                            \n                            \n                                    \n                                getAllCustomers\n                            \n                            \n                                    \n                                getCustomerById\n                            \n                            \n                                    \n                                updateCustomer\n                            \n                            \n                                    \n                                upsertDeliveryPreference\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteCustomer(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllCustomers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCustomers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getCustomerById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCustomerById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCustomer(id: string, dto: UpdateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upsertDeliveryPreference\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertDeliveryPreference(order_id: string, dto: DeliveryPreferenceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('set-preference/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            DeliveryPreferenceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { CustomerService } from './customer.service';\nimport {\n  DeliveryPreferenceDto,\n  UpdateCustomerDto,\n} from './dto/customer.dto';\n\n@Controller('customer')\nexport class CustomerController {\n  constructor(\n    private readonly customerService: CustomerService,\n  ) {}\n\n  @Get()\n  getAllCustomers() {\n    return this.customerService.getAllCustomers();\n  }\n\n  @Get(':id')\n  getCustomerById(@Param('id') id: string) {\n    return this.customerService.getCustomerById(\n      id,\n    );\n  }\n\n  @Patch(':id')\n  updateCustomer(\n    @Param('id') id: string,\n    @Body() dto: UpdateCustomerDto,\n  ) {\n    return this.customerService.updateCustomer(\n      id,\n      dto,\n    );\n  }\n\n  @Delete('id')\n  deleteCustomer(@Param('id') id: string) {\n    return this.customerService.deleteCustomer(\n      id,\n    );\n  }\n\n  @Post('set-preference/:id')\n  upsertDeliveryPreference(\n    @Param('id') order_id: string,\n    @Body() dto: DeliveryPreferenceDto,\n  ) {\n    return this.customerService.upsertDeliveryPreference(\n      order_id,\n      dto,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomerModule.html":{"url":"modules/CustomerModule.html","title":"module - CustomerModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customer/customer.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class CustomerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCustomer\n                            \n                            \n                                    Async\n                                deleteCustomer\n                            \n                            \n                                    Async\n                                deleteDeliveryPreference\n                            \n                            \n                                    Async\n                                getAllCustomers\n                            \n                            \n                                    Async\n                                getCustomerById\n                            \n                            \n                                    Async\n                                updateCustomer\n                            \n                            \n                                    Async\n                                upsertDeliveryPreference\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/customer/customer.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCustomer(dto: CreateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteCustomer(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDeliveryPreference\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDeliveryPreference(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllCustomers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCustomers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCustomerById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCustomerById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCustomer(id: string, dto: UpdateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upsertDeliveryPreference\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertDeliveryPreference(order_id: string, dto: DeliveryPreferenceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            DeliveryPreferenceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { prismaError } from 'src/shared/error-handling';\nimport {\n  CreateCustomerDto,\n  DeliveryPreferenceDto,\n  UpdateCustomerDto,\n} from './dto/customer.dto';\n\n@Injectable()\nexport class CustomerService {\n  constructor(\n    private readonly prisma: PrismaService,\n  ) {}\n\n  async getAllCustomers() {\n    try {\n      return await this.prisma.customer.findMany({\n        orderBy: {\n          updated_at: 'desc',\n        },\n        include: {\n          orders: true,\n          geofence_areas: true,\n        },\n      });\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async getCustomerById(id: string) {\n    try {\n      return await this.prisma.customer.findUnique(\n        {\n          where: {\n            id,\n          },\n          include: {\n            orders: {\n              include: {\n                customer: {\n                  include: {\n                    geofence_areas: true,\n                  },\n                },\n                order_entries: true,\n                order_history: true,\n              },\n            },\n            geofence_areas: true,\n          },\n        },\n      );\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async createCustomer(dto: CreateCustomerDto) {\n    try {\n      const {\n        name,\n        address,\n        email,\n        latitude,\n        longitude,\n        mobile,\n        radius,\n      } = dto;\n      await this.prisma.customer.create({\n        data: {\n          name,\n          address,\n          email,\n          mobile,\n          geofence_areas: {\n            create: {\n              loc_lat: latitude,\n              loc_lon: longitude,\n              radius: Number(radius),\n            },\n          },\n        },\n      });\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async updateCustomer(\n    id: string,\n    dto: UpdateCustomerDto,\n  ) {\n    try {\n      return await this.prisma.customer.update({\n        where: {\n          id,\n        },\n        data: {\n          ...dto,\n        },\n      });\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async deleteCustomer(id: string) {\n    try {\n      return await this.prisma.customer.delete({\n        where: {\n          id,\n        },\n      });\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async upsertDeliveryPreference(\n    order_id: string,\n    dto: DeliveryPreferenceDto,\n  ) {\n    try {\n      const order =\n        await this.prisma.purchase_order.findUnique(\n          {\n            where: {\n              id: order_id,\n            },\n          },\n        );\n\n      const delivery_date = new Date(\n        dto.delivery_date,\n      );\n\n      if (order.delivery_attempts \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeliveryPreferenceDto.html":{"url":"classes/DeliveryPreferenceDto.html","title":"class - DeliveryPreferenceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeliveryPreferenceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                delivery_date\n                            \n                            \n                                    \n                                delivery_time\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delivery_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delivery_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsDateString,\n  IsEmail,\n  IsLatitude,\n  IsLongitude,\n  IsNotEmpty,\n  IsNumberString,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateCustomerDto {\n  @IsString()\n  name: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsOptional()\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  address: string;\n\n  @IsLatitude()\n  latitude: number;\n\n  @IsLongitude()\n  longitude: number;\n\n  @IsNumberString()\n  radius: string;\n}\n\nexport class UpdateCustomerDto {\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @IsOptional()\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  @IsOptional()\n  address: string;\n\n  @IsLatitude()\n  @IsOptional()\n  latitude: number;\n\n  @IsLongitude()\n  @IsOptional()\n  longitude: number;\n\n  @IsNumberString()\n  @IsOptional()\n  radius: string;\n}\n\nexport class DeliveryPreferenceDto {\n  @IsDateString()\n  delivery_date: Date;\n\n  @IsString()\n  delivery_time: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoFencingDto.html":{"url":"classes/GeoFencingDto.html","title":"class - GeoFencingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoFencingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geofencing/dto/geofencing.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                driver_id\n                            \n                            \n                                    \n                                latitude\n                            \n                            \n                                    \n                                longitude\n                            \n                            \n                                    \n                                order_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        driver_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/geofencing/dto/geofencing.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLatitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/geofencing/dto/geofencing.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLongitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/geofencing/dto/geofencing.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/geofencing/dto/geofencing.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsLatitude,\n  IsLongitude,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class GeoFencingDto {\n  @IsLatitude()\n  latitude: string;\n\n  @IsLongitude()\n  longitude: string;\n\n  @IsString()\n  order_id: string;\n\n  @IsString()\n  driver_id: string;\n}\n\nexport class SendSMSDto {\n  @IsPhoneNumber()\n  phone: string;\n\n  @IsString()\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeofencingController.html":{"url":"controllers/GeofencingController.html","title":"controller - GeofencingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeofencingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geofencing/geofencing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                geofencing\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                checkWithinRadius\n                            \n                            \n                                    \n                                sendSMSNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        checkWithinRadius\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkWithinRadius(id: string, dto: GeoFencingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/geofencing/geofencing.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            GeoFencingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sendSMSNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSMSNotification(dto: SendSMSDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send')\n                \n            \n\n                    \n                        \n                            Defined in src/geofencing/geofencing.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SendSMSDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Param,\n  Post,\n} from '@nestjs/common';\nimport { GeofencingService } from './geofencing.service';\nimport {\n  GeoFencingDto,\n  SendSMSDto,\n} from './dto/geofencing.dto';\n\n@Controller('geofencing')\nexport class GeofencingController {\n  constructor(\n    private readonly geofenceService: GeofencingService,\n  ) {}\n\n  @Post(':id')\n  checkWithinRadius(\n    @Param('id') id: string,\n    @Body() dto: GeoFencingDto,\n  ) {\n    return this.geofenceService.checkWithinRadius(\n      id,\n      dto,\n    );\n  }\n\n  @Post('send')\n  sendSMSNotification(@Body() dto: SendSMSDto) {\n    return this.geofenceService.sendSMSNotification(\n      dto,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeofencingModule.html":{"url":"modules/GeofencingModule.html","title":"module - GeofencingModule","body":"\n                   \n\n\n\n\n    Modules\n    GeofencingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeofencingModule\n\n\n\ncluster_GeofencingModule_providers\n\n\n\n\nGeofencingService\n\nGeofencingService\n\n\n\nGeofencingModule\n\nGeofencingModule\n\nGeofencingModule -->\n\nGeofencingService->GeofencingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/geofencing/geofencing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeofencingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeofencingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeofencingController } from './geofencing.controller';\nimport { GeofencingService } from './geofencing.service';\n\n@Module({\n  controllers: [GeofencingController],\n  providers: [GeofencingService]\n})\nexport class GeofencingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeofencingService.html":{"url":"injectables/GeofencingService.html","title":"injectable - GeofencingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeofencingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geofencing/geofencing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                twilioClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkWithinRadius\n                            \n                            \n                                    Async\n                                sendSMSNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/geofencing/geofencing.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkWithinRadius\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkWithinRadius(id: string, dto: GeoFencingDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/geofencing/geofencing.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            GeoFencingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendSMSNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSMSNotification(dto: SendSMSDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/geofencing/geofencing.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SendSMSDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        twilioClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Twilio\n\n                    \n                \n                    \n                        \n                                Defined in src/geofencing/geofencing.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { prismaError } from 'src/shared/error-handling';\nimport * as geolib from 'geolib';\nimport {\n  GeoFencingDto,\n  SendSMSDto,\n} from './dto/geofencing.dto';\nimport { Twilio } from 'twilio';\n\n@Injectable()\nexport class GeofencingService {\n  private twilioClient: Twilio;\n\n  constructor(\n    private readonly prisma: PrismaService,\n  ) {\n    this.twilioClient = new Twilio(\n      process.env.TWILIO_ACCOUNT_SID,\n      process.env.TWILIO_AUTH_TOKEN,\n    );\n  }\n\n  async checkWithinRadius(\n    id: string,\n    dto: GeoFencingDto,\n  ) {\n    try {\n      const {\n        latitude,\n        longitude,\n        driver_id,\n        order_id,\n      } = dto;\n      const customer =\n        await this.prisma.customer.findUnique({\n          where: {\n            id,\n          },\n          include: {\n            geofence_areas: true,\n          },\n        });\n\n      if (!customer.geofence_areas.is_active) {\n        throw new NotFoundException(\n          'Customer geofence area is not active',\n        );\n      }\n\n      // checks if 51.525/7.4575 is within a radius of 5 km from 51.5175/7.4678\n      const isWithinRadius =\n        geolib.isPointWithinRadius(\n          { latitude, longitude },\n          {\n            latitude:\n              customer.geofence_areas.loc_lat,\n            longitude:\n              customer.geofence_areas.loc_lon,\n          },\n          customer.geofence_areas.radius,\n        );\n\n      const distanceInMetres = geolib.getDistance(\n        { latitude, longitude },\n        {\n          latitude:\n            customer.geofence_areas.loc_lat,\n          longitude:\n            customer.geofence_areas.loc_lon,\n        },\n      );\n\n      console.log(distanceInMetres);\n\n      if (isWithinRadius) {\n        await this.prisma.driver_path.create({\n          data: {\n            latitude,\n            longitude,\n            order_id,\n            driver_id,\n          },\n        });\n\n        if (distanceInMetres \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/jwt/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(\n  Strategy,\n  'jwt',\n)\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/jwt/jwt.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport {\n  ExtractJwt,\n  Strategy,\n} from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(\n  Strategy,\n  'jwt',\n) {\n  constructor(configService: ConfigService) {\n    super({\n      jwtFromRequest:\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey:\n        configService.get('JWT_SECRET'),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LockerModule.html":{"url":"modules/LockerModule.html","title":"module - LockerModule","body":"\n                   \n\n\n\n\n    Modules\n    LockerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/locker/locker.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class LockerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderEntriesDto.html":{"url":"classes/OrderEntriesDto.html","title":"class - OrderEntriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderEntriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase-order/dto/orders.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                product_id\n                            \n                            \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Status } from '@prisma/client';\nimport {\n  IsArray,\n  IsEnum,\n  IsLatitude,\n  IsLongitude,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class OrdersDto {\n  @IsString()\n  customer_id: string;\n\n  @IsString()\n  user_id: string;\n\n  @IsEnum(Status)\n  @IsOptional()\n  status: Status;\n\n  @IsLatitude()\n  loc_lat: number;\n\n  @IsLongitude()\n  loc_lon: number;\n\n  @IsArray()\n  order_entries: Array;\n}\n\nexport class OrderEntriesDto {\n  @IsString()\n  product_id: string;\n\n  @IsNumber()\n  quantity: number;\n}\n\nexport class UpdateOrdersDto {\n  @IsEnum(Status)\n  @IsOptional()\n  status: Status;\n\n  @IsLatitude()\n  @IsOptional()\n  loc_lat: number;\n\n  @IsLongitude()\n  @IsOptional()\n  loc_lon: number;\n\n  @IsString()\n  description: string;\n\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrdersDto.html":{"url":"classes/OrdersDto.html","title":"class - OrdersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrdersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase-order/dto/orders.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                customer_id\n                            \n                            \n                                    \n                                loc_lat\n                            \n                            \n                                    \n                                loc_lon\n                            \n                            \n                                    \n                                order_entries\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loc_lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLatitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loc_lon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLongitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_entries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Status)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Status } from '@prisma/client';\nimport {\n  IsArray,\n  IsEnum,\n  IsLatitude,\n  IsLongitude,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class OrdersDto {\n  @IsString()\n  customer_id: string;\n\n  @IsString()\n  user_id: string;\n\n  @IsEnum(Status)\n  @IsOptional()\n  status: Status;\n\n  @IsLatitude()\n  loc_lat: number;\n\n  @IsLongitude()\n  loc_lon: number;\n\n  @IsArray()\n  order_entries: Array;\n}\n\nexport class OrderEntriesDto {\n  @IsString()\n  product_id: string;\n\n  @IsNumber()\n  quantity: number;\n}\n\nexport class UpdateOrdersDto {\n  @IsEnum(Status)\n  @IsOptional()\n  status: Status;\n\n  @IsLatitude()\n  @IsOptional()\n  loc_lat: number;\n\n  @IsLongitude()\n  @IsOptional()\n  loc_lon: number;\n\n  @IsString()\n  description: string;\n\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nConfigService  -->\n\nPrismaModule->ConfigService \n\n\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport {\n  ConfigModule,\n  ConfigService,\n} from '@nestjs/config';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  imports: [ConfigModule],\n  providers: [PrismaService, ConfigService],\n  exports: [PrismaService, ConfigService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  constructor(config?: ConfigService) {\n    let configService = new ConfigService();\n    super({\n      datasources: {\n        db: {\n          url:\n            config?.get('DATABASE_URL') ||\n            configService.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deleteProduct\n                            \n                            \n                                    \n                                getAllProducts\n                            \n                            \n                                    \n                                getProductById\n                            \n                            \n                                    \n                                upsertProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upsertProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertProduct(dto: ProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductDto } from './dto/product.dto';\n\n@Controller('product')\nexport class ProductController {\n  constructor(\n    private readonly productService: ProductService,\n  ) {}\n\n  @Get()\n  getAllProducts() {\n    return this.productService.getAllProducts();\n  }\n\n  @Get(':id')\n  getProductById(@Param('id') id: string) {\n    return this.productService.getProductById(id);\n  }\n\n  @Post()\n  upsertProduct(@Body() dto: ProductDto) {\n    return this.productService.upsertProduct(dto);\n  }\n\n  @Delete(':id')\n  deleteProduct(@Param('id') id: string) {\n    return this.productService.deleteProduct(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDto.html":{"url":"classes/ProductDto.html","title":"class - ProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/product.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/product.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/product.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNumber,\n  IsNumberString,\n  IsString,\n} from 'class-validator';\n\nexport class ProductDto {\n  @IsString()\n  code: string;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  description: string;\n\n  @IsString()\n  category: string;\n\n  @IsNumber()\n  weight: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService\n\nProductService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\n\n@Module({\n  providers: [ProductService]\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProductById\n                            \n                            \n                                    Async\n                                upsertProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upsertProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertProduct(dto: ProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { prismaError } from 'src/shared/error-handling';\nimport { ProductDto } from './dto/product.dto';\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    private readonly prisma: PrismaService,\n  ) {}\n\n  async getAllProducts() {\n    try {\n      return await this.prisma.product.findMany({\n        orderBy: {\n          updated_at: 'desc',\n        },\n      });\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async getProductById(id: string) {\n    try {\n      return await this.prisma.product.findUnique(\n        {\n          where: {\n            id,\n          },\n        },\n      );\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async upsertProduct(dto: ProductDto) {\n    try {\n      const {\n        code,\n        category,\n        description,\n        name,\n        weight,\n      } = dto;\n      return await this.prisma.product.upsert({\n        where: {\n          code,\n        },\n        create: {\n          category,\n          description,\n          name,\n          weight,\n          code,\n        },\n        update: {\n          category,\n          description,\n          name,\n          weight,\n        },\n      });\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async deleteProduct(id: string) {\n    try {\n      return await this.prisma.product.update({\n        where: {\n          id,\n        },\n        data: {},\n      });\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PurchaseOrderController.html":{"url":"controllers/PurchaseOrderController.html","title":"controller - PurchaseOrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PurchaseOrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase-order/purchase-order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                purchase-order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createOrder\n                            \n                            \n                                    \n                                deleteOrder\n                            \n                            \n                                    \n                                getAllOrders\n                            \n                            \n                                    \n                                getOrderById\n                            \n                            \n                                    \n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(dto: OrdersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            OrdersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrder(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrders()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrder(id: string, dto: UpdateOrdersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateOrdersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { PurchaseOrderService } from './purchase-order.service';\nimport {\n  OrdersDto,\n  UpdateOrdersDto,\n} from './dto/orders.dto';\n\n@Controller('purchase-order')\nexport class PurchaseOrderController {\n  constructor(\n    private readonly purchaseOrderService: PurchaseOrderService,\n  ) {}\n\n  @Get()\n  getAllOrders() {\n    return this.purchaseOrderService.getAllOrders();\n  }\n\n  @Get(':id')\n  getOrderById(@Param('id') id: string) {\n    return this.purchaseOrderService.getOrderById(\n      id,\n    );\n  }\n\n  @Post()\n  createOrder(@Body() dto: OrdersDto) {\n    return this.purchaseOrderService.createOrder(\n      dto,\n    );\n  }\n\n  @Patch(':id')\n  updateOrder(\n    @Param('id') id: string,\n    @Body() dto: UpdateOrdersDto,\n  ) {\n    return this.purchaseOrderService.updateOrder(\n      id,\n      dto,\n    );\n  }\n\n  @Delete(':id')\n  deleteOrder(@Param('id') id: string) {\n    return this.purchaseOrderService.deleteOrder(\n      id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PurchaseOrderModule.html":{"url":"modules/PurchaseOrderModule.html","title":"module - PurchaseOrderModule","body":"\n                   \n\n\n\n\n    Modules\n    PurchaseOrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PurchaseOrderModule\n\n\n\ncluster_PurchaseOrderModule_providers\n\n\n\n\nGeofencingService\n\nGeofencingService\n\n\n\nPurchaseOrderModule\n\nPurchaseOrderModule\n\nPurchaseOrderModule -->\n\nGeofencingService->PurchaseOrderModule\n\n\n\n\n\nPurchaseOrderService\n\nPurchaseOrderService\n\nPurchaseOrderModule -->\n\nPurchaseOrderService->PurchaseOrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/purchase-order/purchase-order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeofencingService\n                        \n                        \n                            PurchaseOrderService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PurchaseOrderService } from './purchase-order.service';\nimport { GeofencingService } from 'src/geofencing/geofencing.service';\n\n@Module({\n  providers: [\n    PurchaseOrderService,\n    GeofencingService,\n  ],\n})\nexport class PurchaseOrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PurchaseOrderService.html":{"url":"injectables/PurchaseOrderService.html","title":"injectable - PurchaseOrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PurchaseOrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase-order/purchase-order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                deleteOrder\n                            \n                            \n                                    Async\n                                getAllOrders\n                            \n                            \n                                    Async\n                                getOrderById\n                            \n                            \n                                    Async\n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, geofencingSerive: GeofencingService)\n                    \n                \n                        \n                            \n                                Defined in src/purchase-order/purchase-order.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geofencingSerive\n                                                  \n                                                        \n                                                                        GeofencingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(dto: OrdersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            OrdersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrder(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.service.ts:301\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrder(id: string, dto: UpdateOrdersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/purchase-order/purchase-order.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateOrdersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { prismaError } from 'src/shared/error-handling';\nimport {\n  OrdersDto,\n  UpdateOrdersDto,\n} from './dto/orders.dto';\nimport { GeofencingService } from 'src/geofencing/geofencing.service';\n\n@Injectable()\nexport class PurchaseOrderService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly geofencingSerive: GeofencingService,\n  ) {}\n\n  async getAllOrders() {\n    try {\n      return await this.prisma.purchase_order.findMany(\n        {\n          orderBy: [\n            {\n              updated_at: 'desc',\n            },\n          ],\n          include: {\n            order_entries: true,\n            order_history: {\n              orderBy: {\n                created_at: 'desc',\n              },\n            },\n            customer: true,\n            driver_path: true,\n            preference: true,\n          },\n        },\n      );\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async getOrderById(id: string) {\n    try {\n      return await this.prisma.purchase_order.findUnique(\n        {\n          where: {\n            id,\n          },\n          include: {\n            driver_path: true,\n            order_entries: {\n              include: {\n                product: true,\n              },\n            },\n            order_history: {\n              orderBy: {\n                created_at: 'desc',\n              },\n              include: {\n                updated_by: true,\n              },\n            },\n            customer: {\n              include: {\n                orders: true,\n                geofence_areas: true,\n              },\n            },\n            preference: true,\n          },\n        },\n      );\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async createOrder(dto: OrdersDto) {\n    try {\n      const {\n        customer_id,\n        user_id,\n        loc_lat,\n        loc_lon,\n        order_entries,\n      } = dto;\n\n      let entries = [];\n      let total_weight: number = 0;\n\n      if (order_entries.length === 0) {\n        throw new ForbiddenException(\n          'Please add products in the order.',\n        );\n      }\n\n      for (const {\n        product_id,\n        quantity,\n      } of order_entries) {\n        const result =\n          await this.prisma.order_entries.create({\n            data: {\n              product_id,\n              quantity,\n            },\n          });\n\n        entries.push(result);\n\n        const product =\n          await this.prisma.product.findUnique({\n            where: {\n              id: product_id,\n            },\n          });\n\n        total_weight += product.weight * quantity;\n      }\n\n      const order =\n        await this.prisma.purchase_order.create({\n          data: {\n            customer_id,\n            status: 'initiated',\n            loc_lat,\n            loc_lon,\n            order_entries: {\n              connect: entries.map(({ id }) => {\n                return {\n                  id,\n                };\n              }),\n            },\n            total_weight,\n          },\n        });\n\n      const updatedOrder =\n        await this.prisma.purchase_order.update({\n          where: {\n            id: order.id,\n          },\n          data: {\n            order_history: {\n              create: {\n                status: 'initiated',\n                description:\n                  'Order was initiated at facility 1',\n                loc_lat,\n                loc_lon,\n                updated_by: {\n                  connect: {\n                    id: user_id,\n                  },\n                },\n              },\n            },\n          },\n          include: {\n            order_entries: true,\n            order_history: true,\n          },\n        });\n\n      return updatedOrder;\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async updateOrder(\n    id: string,\n    dto: UpdateOrdersDto,\n  ) {\n    try {\n      const {\n        status,\n        loc_lat,\n        loc_lon,\n        description,\n        user_id,\n      } = dto;\n\n      const order =\n        await this.prisma.purchase_order.findUnique(\n          {\n            where: { id },\n            include: {\n              customer: true,\n            },\n          },\n        );\n\n      if (status === 'out_for_delivery') {\n        await this.prisma.geofence_area.update({\n          where: {\n            customer_id: order.customer_id,\n          },\n          data: {\n            is_active: true,\n          },\n        });\n\n        if (!order.driver_id) {\n          await this.prisma.purchase_order.update(\n            {\n              where: {\n                id,\n              },\n              data: {\n                driver_id:\n                  'efadf31d-5556-49e5-afb8-29319f7a71cc',\n              },\n            },\n          );\n        }\n      }\n\n      if (status === 'failed_to_deliver') {\n        const failedOrder =\n          await this.prisma.purchase_order.update(\n            {\n              where: {\n                id: order.id,\n              },\n              data: {\n                delivery_attempts:\n                  order.delivery_attempts + 1,\n              },\n            },\n          );\n\n        if (\n          failedOrder.delivery_attempts === 2\n          // && dto.status === 'reached_facility'\n        ) {\n          await this.geofencingSerive.sendSMSNotification(\n            {\n              phone: order.customer.mobile,\n              message: `\\nHello ${order.customer.name},\\nwe hope you're well. We apologize for the inconvenience caused by our recent unsuccessful delivery attempts. \\nTo ensure smooth delivery in the future, please update your preferences using the form linked here: \\nhttps://e316-2605-8d80-6a0-a475-5838-1761-a59c-7083.ngrok-free.app/customer/preference/${order.id}.\\n\\nYour satisfaction is important to us. Thank you for your cooperation.\\n\\nBest regards,\\nTrustNTrack`,\n            },\n          );\n        }\n\n        await this.prisma.geofence_area.update({\n          where: {\n            customer_id: order.customer_id,\n          },\n          data: {\n            is_active: false,\n          },\n        });\n      }\n\n      const updatedOrder =\n        await this.prisma.purchase_order.update({\n          where: {\n            id,\n          },\n          data: {\n            status,\n            loc_lat,\n            loc_lon,\n            order_history: {\n              create: {\n                status,\n                updated_by: {\n                  connect: {\n                    id: user_id,\n                  },\n                },\n                description,\n                loc_lat,\n                loc_lon,\n              },\n            },\n          },\n          include: {\n            order_entries: true,\n            order_history: {\n              orderBy: {\n                created_at: 'desc',\n              },\n            },\n          },\n        });\n\n      return updatedOrder;\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async deleteOrder(id: string) {\n    try {\n      return await this.prisma.purchase_order.delete(\n        {\n          where: {\n            id,\n          },\n          include: {\n            order_entries: true,\n            order_history: true,\n          },\n        },\n      );\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendSMSDto.html":{"url":"classes/SendSMSDto.html","title":"class - SendSMSDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendSMSDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geofencing/dto/geofencing.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/geofencing/dto/geofencing.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/geofencing/dto/geofencing.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsLatitude,\n  IsLongitude,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class GeoFencingDto {\n  @IsLatitude()\n  latitude: string;\n\n  @IsLongitude()\n  longitude: string;\n\n  @IsString()\n  order_id: string;\n\n  @IsString()\n  driver_id: string;\n}\n\nexport class SendSMSDto {\n  @IsPhoneNumber()\n  phone: string;\n\n  @IsString()\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@prisma/client';\nimport {\n  IsEmail,\n  IsEnum,\n  IsString,\n} from 'class-validator';\n\nexport class UsersDto {\n  @IsEmail()\n  email: string;\n}\n\nexport class SignUpDto {\n  @IsString()\n  name: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  password: string;\n\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class SignInDto {\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  password: string;\n}\n\nexport class UpdateUserDto {\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                mobile\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@prisma/client';\nimport {\n  IsEmail,\n  IsEnum,\n  IsString,\n} from 'class-validator';\n\nexport class UsersDto {\n  @IsEmail()\n  email: string;\n}\n\nexport class SignUpDto {\n  @IsString()\n  name: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  password: string;\n\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class SignInDto {\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  password: string;\n}\n\nexport class UpdateUserDto {\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCustomerDto.html":{"url":"classes/UpdateCustomerDto.html","title":"class - UpdateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                latitude\n                            \n                            \n                                    \n                                    \n                                longitude\n                            \n                            \n                                    \n                                    \n                                mobile\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                radius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLatitude()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLongitude()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        radius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumberString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer.dto.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsDateString,\n  IsEmail,\n  IsLatitude,\n  IsLongitude,\n  IsNotEmpty,\n  IsNumberString,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateCustomerDto {\n  @IsString()\n  name: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsOptional()\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  address: string;\n\n  @IsLatitude()\n  latitude: number;\n\n  @IsLongitude()\n  longitude: number;\n\n  @IsNumberString()\n  radius: string;\n}\n\nexport class UpdateCustomerDto {\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @IsOptional()\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  @IsOptional()\n  address: string;\n\n  @IsLatitude()\n  @IsOptional()\n  latitude: number;\n\n  @IsLongitude()\n  @IsOptional()\n  longitude: number;\n\n  @IsNumberString()\n  @IsOptional()\n  radius: string;\n}\n\nexport class DeliveryPreferenceDto {\n  @IsDateString()\n  delivery_date: Date;\n\n  @IsString()\n  delivery_time: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrdersDto.html":{"url":"classes/UpdateOrdersDto.html","title":"class - UpdateOrdersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrdersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase-order/dto/orders.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                loc_lat\n                            \n                            \n                                    \n                                    \n                                loc_lon\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        loc_lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLatitude()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        loc_lon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsLongitude()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Status)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase-order/dto/orders.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Status } from '@prisma/client';\nimport {\n  IsArray,\n  IsEnum,\n  IsLatitude,\n  IsLongitude,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class OrdersDto {\n  @IsString()\n  customer_id: string;\n\n  @IsString()\n  user_id: string;\n\n  @IsEnum(Status)\n  @IsOptional()\n  status: Status;\n\n  @IsLatitude()\n  loc_lat: number;\n\n  @IsLongitude()\n  loc_lon: number;\n\n  @IsArray()\n  order_entries: Array;\n}\n\nexport class OrderEntriesDto {\n  @IsString()\n  product_id: string;\n\n  @IsNumber()\n  quantity: number;\n}\n\nexport class UpdateOrdersDto {\n  @IsEnum(Status)\n  @IsOptional()\n  status: Status;\n\n  @IsLatitude()\n  @IsOptional()\n  loc_lat: number;\n\n  @IsLongitude()\n  @IsOptional()\n  loc_lon: number;\n\n  @IsString()\n  description: string;\n\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@prisma/client';\nimport {\n  IsEmail,\n  IsEnum,\n  IsString,\n} from 'class-validator';\n\nexport class UsersDto {\n  @IsEmail()\n  email: string;\n}\n\nexport class SignUpDto {\n  @IsString()\n  name: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  password: string;\n\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class SignInDto {\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  password: string;\n}\n\nexport class UpdateUserDto {\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getDriverInfo\n                            \n                            \n                                    \n                                getUserByEmail\n                            \n                            \n                                    \n                                getUsers\n                            \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                            \n                                    \n                                updateUser\n                            \n                            \n                                    \n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getDriverInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDriverInfo(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('driver/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByEmail(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(dto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(dto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, dto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('verify')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport {\n  SignInDto,\n  SignUpDto,\n  UpdateUserDto,\n} from './dto/user.dto';\nimport { Request } from 'express';\nimport { AuthGuard } from 'src/shared/guards/auth.guard';\n\n@Controller('user')\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n  ) {}\n\n  @Post('signup')\n  signUp(@Body() dto: SignUpDto) {\n    return this.userService.signUp(dto);\n  }\n\n  @Post('login')\n  signIn(@Body() dto: SignInDto) {\n    return this.userService.signIn(dto);\n  }\n\n  @Get('verify')\n  verifyToken(@Req() req: Request) {\n    return this.userService.verifySession(req);\n  }\n\n  @Get()\n  // @UseGuards(AuthGuard)\n  getUsers() {\n    return this.userService.getUsers();\n  }\n\n  @Get(':id')\n  getUserByEmail(@Param('id') id: string) {\n    return this.userService.getUser(id);\n  }\n\n  @Patch(':id')\n  updateUser(\n    @Param('id') id: string,\n    @Body() dto: UpdateUserDto,\n  ) {\n    return this.userService.updateUser(id, dto);\n  }\n\n  @Get('driver/:id')\n  getDriverInfo(@Param('id') id: string) {\n    return this.userService.getDriverInfo(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUserModule -->\n\nPrismaService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport {\n  ConfigModule,\n  ConfigService,\n} from '@nestjs/config';\nimport {\n  JwtModule,\n  JwtService,\n} from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport * as dotenv from 'dotenv';\nimport { UserService } from './user.service';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { JwtStrategy } from 'src/shared/jwt/jwt.strategy';\ndotenv.config();\n\n@Module({\n  imports: [\n    JwtModule.register({\n      global: true,\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRES,\n      },\n    }),\n  ],\n  providers: [\n    UserService,\n    PrismaService,\n    JwtService,\n  ],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDriverInfo\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                verifyJwt\n                            \n                            \n                                    Async\n                                verifySession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDriverInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDriverInfo(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:226\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(dto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(dto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, dto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyJwt\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyJwt(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifySession\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifySession(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n  Req,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { prismaError } from 'src/shared/error-handling';\nimport {\n  SignInDto,\n  SignUpDto,\n  UpdateUserDto,\n} from './dto/user.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { Request } from 'express';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private jwtService: JwtService,\n  ) {}\n\n  async signUp(\n    dto: SignUpDto,\n  ): Promise {\n    try {\n      const {\n        email,\n        name,\n        password,\n        mobile,\n        role,\n      } = dto;\n\n      const hashedPassword = await bcrypt.hash(\n        password,\n        10,\n      );\n\n      const user = await this.prisma.user.create({\n        data: {\n          name,\n          email,\n          password: hashedPassword,\n          mobile,\n          role,\n        },\n      });\n\n      const token = this.jwtService.sign({\n        id: user.id,\n      });\n\n      return { ...user, token };\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async signIn(\n    dto: SignInDto,\n  ): Promise {\n    try {\n      const { email, password } = dto;\n\n      const user =\n        await this.prisma.user.findUnique({\n          where: {\n            email,\n          },\n        });\n\n      if (!user) {\n        throw new ForbiddenException(\n          'User not found',\n        );\n      }\n\n      const isPasswordMatched =\n        await bcrypt.compare(\n          password,\n          user.password,\n        );\n\n      if (!isPasswordMatched) {\n        throw new UnauthorizedException(\n          'Invalid email or password',\n        );\n      }\n\n      if (user.role === null) {\n        throw new UnauthorizedException(\n          'User is not verified by the Admin',\n        );\n      }\n\n      const token = this.jwtService.sign({\n        id: user.id,\n      });\n\n      return { ...user, token };\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async verifyJwt(\n    token: string,\n  ): Promise {\n    try {\n      await this.jwtService.verify(token, {\n        secret: 'nestjsbackend',\n      });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async verifySession(@Req() req: Request) {\n    try {\n      const token = req.headers.token;\n\n      if (!token) {\n        throw new UnauthorizedException(\n          'Token not provided',\n        );\n      }\n\n      const isValid = await this.verifyJwt(\n        token.toString(),\n      );\n\n      if (!isValid) {\n        throw new UnauthorizedException(\n          'Invalid token',\n        );\n      }\n\n      return 'valid token';\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async getUsers() {\n    try {\n      const users =\n        await this.prisma.user.findMany({\n          orderBy: {\n            updated_at: 'desc',\n          },\n          include: {\n            _count: {\n              select: {\n                orders: true,\n              },\n            },\n          },\n        });\n\n      return users;\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async getUser(id: string) {\n    try {\n      const user =\n        await this.prisma.user.findUnique({\n          where: {\n            id,\n          },\n          include: {\n            orders: {\n              include: {\n                order_entries: true,\n                order_history: true,\n                customer: true,\n              },\n            },\n          },\n        });\n\n      return user;\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async updateUser(\n    id: string,\n    dto: UpdateUserDto,\n  ) {\n    try {\n      const user =\n        await this.prisma.user.findUnique({\n          where: {\n            id,\n          },\n        });\n\n      if (user.isVerified) {\n        throw new ForbiddenException(\n          'User is already verified',\n        );\n      }\n\n      await this.prisma.user.update({\n        where: {\n          id,\n        },\n        data: {\n          isVerified: true,\n          role: dto.role,\n        },\n      });\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n\n  async getDriverInfo(id: string) {\n    try {\n      return await this.prisma.user.findUnique({\n        where: {\n          role: 'delivery_person',\n          id,\n        },\n        include: {\n          orders: {\n            include: {\n              customer: {\n                include: {\n                  geofence_areas: true,\n                },\n              },\n              order_entries: true,\n            },\n          },\n          driver_path: true,\n        },\n      });\n    } catch (err) {\n      prismaError(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersDto.html":{"url":"classes/UsersDto.html","title":"class - UsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@prisma/client';\nimport {\n  IsEmail,\n  IsEnum,\n  IsString,\n} from 'class-validator';\n\nexport class UsersDto {\n  @IsEmail()\n  email: string;\n}\n\nexport class SignUpDto {\n  @IsString()\n  name: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  mobile: string;\n\n  @IsString()\n  password: string;\n\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class SignInDto {\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  password: string;\n}\n\nexport class UpdateUserDto {\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/customer/customer.controller.ts\n            \n            controller\n            CustomerController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/customer/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/customer/dto/customer.dto.ts\n            \n            class\n            CreateCustomerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/customer/dto/customer.dto.ts\n            \n            class\n            DeliveryPreferenceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/customer/dto/customer.dto.ts\n            \n            class\n            UpdateCustomerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/geofencing/dto/geofencing.dto.ts\n            \n            class\n            GeoFencingDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/geofencing/dto/geofencing.dto.ts\n            \n            class\n            SendSMSDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/geofencing/geofencing.controller.ts\n            \n            controller\n            GeofencingController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/geofencing/geofencing.service.ts\n            \n            injectable\n            GeofencingService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/product/dto/product.dto.ts\n            \n            class\n            ProductDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/purchase-order/dto/orders.dto.ts\n            \n            class\n            OrderEntriesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/purchase-order/dto/orders.dto.ts\n            \n            class\n            OrdersDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/purchase-order/dto/orders.dto.ts\n            \n            class\n            UpdateOrdersDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/purchase-order/purchase-order.controller.ts\n            \n            controller\n            PurchaseOrderController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/purchase-order/purchase-order.service.ts\n            \n            injectable\n            PurchaseOrderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/error-handling.ts\n            \n            variable\n            prismaError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/helper.ts\n            \n            variable\n            bigIntHelper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/jwt/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UsersDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^5.10.2\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            geolib : ^3.3.4\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            serialport : ^12.0.0\n        \n            twilio : ^5.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nPrerequisites\nExample :$ Should have node installed in the system\n$ Download from - https://nodejs.org/en\n$ Install the downloaded node programInstallation\nExample :$ npm installRunning the app\nExample :# starting the backend\n$ npm run start:devOptional commands -\nTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeofencingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LockerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PurchaseOrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nCustomerModule\n\nCustomerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nGeofencingModule\n\nGeofencingModule\n\nAppModule -->\n\nGeofencingModule->AppModule\n\n\n\n\n\nLockerModule\n\nLockerModule\n\nAppModule -->\n\nLockerModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nPrismaModule->ConfigService \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nPurchaseOrderModule\n\nPurchaseOrderModule\n\nAppModule -->\n\nPurchaseOrderModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nAppModule -->\n\nCustomerService->AppModule\n\n\n\n\n\nGeofencingService\n\nGeofencingService\n\nGeofencingModule -->\n\nGeofencingService->GeofencingModule\n\n\n\nPurchaseOrderModule -->\n\nGeofencingService->PurchaseOrderModule\n\n\n\nAppModule -->\n\nGeofencingService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nUserModule -->\n\nPrismaService->UserModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\nAppModule -->\n\nProductService->AppModule\n\n\n\n\n\nPurchaseOrderService\n\nPurchaseOrderService\n\nPurchaseOrderModule -->\n\nPurchaseOrderService->PurchaseOrderModule\n\n\n\nAppModule -->\n\nPurchaseOrderService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bigIntHelper   (src/.../helper.ts)\n                        \n                        \n                            prismaError   (src/.../error-handling.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bigIntHelper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (param: any): any => {\n  return JSON.stringify(\n    param,\n    (key, value) =>\n      typeof value === 'bigint'\n        ? value.toString()\n        : value,\n    2,\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/error-handling.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prismaError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (err: any) => {\n  if (err.code == 'P2025') {\n    throw new NotFoundException(err.meta.cause);\n  }\n\n  if (err.code == 'P2002') {\n    throw new ForbiddenException(\n      `Same record already exist. Unique constraint required for ${err.meta.target}`,\n    );\n  }\n\n  if (\n    err instanceof\n    Prisma.PrismaClientKnownRequestError\n  ) {\n    throw new ForbiddenException(\n      'One of the records does not exist. Please fill correct details',\n    );\n  }\n\n  throw err;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
